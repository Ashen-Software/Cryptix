"use client";
import {
  OTPLoginUI,
  PassKeyLogin,
  PoweredByThirdweb,
  SocialLogin,
  TOS
} from "./chunk-AFM2C73P.js";
import {
  ConnectWalletSocialOptions,
  useInAppWalletLocale,
  useSelectionData,
  useSetSelectionData
} from "./chunk-SGIGYOYS.js";
import {
  useScreenContext
} from "./chunk-47OUEL5A.js";
import "./chunk-5TSRSVIC.js";
import "./chunk-7QUZCUO3.js";
import "./chunk-BZBZUKEQ.js";
import {
  LoadingScreen
} from "./chunk-MYDXRGVE.js";
import "./chunk-BFEMHPGA.js";
import {
  Container,
  Img,
  ModalHeader,
  ModalTitle,
  Spacer,
  iconSize
} from "./chunk-TS42ER4K.js";
import "./chunk-RMLEFI72.js";
import "./chunk-X3XYCUUS.js";
import "./chunk-2SE7FSFE.js";
import {
  require_jsx_runtime
} from "./chunk-PQVTKVEJ.js";
import "./chunk-5YWLOG7O.js";
import "./chunk-A4STD2P3.js";
import "./chunk-57DFWRZ3.js";
import "./chunk-5R32MHFT.js";
import "./chunk-D6UC7WRW.js";
import "./chunk-ZX3P6DTN.js";
import "./chunk-UTSWADTJ.js";
import "./chunk-5E5FQUOC.js";
import "./chunk-M7UJHDZW.js";
import "./chunk-AOWXXJZS.js";
import "./chunk-OSZAYZBM.js";
import "./chunk-PZWOPBWI.js";
import "./chunk-3A6EJQH3.js";
import "./chunk-WF2UJPJG.js";
import "./chunk-HGWZNQ5H.js";
import "./chunk-TRL57KBW.js";
import "./chunk-NMVKDFRL.js";
import "./chunk-MHFR2GDE.js";
import "./chunk-CVWITOXT.js";
import "./chunk-SHWHM7JY.js";
import "./chunk-EZ4JTQAA.js";
import {
  __toESM
} from "./chunk-SEVZ5PBP.js";

// node_modules/thirdweb/dist/esm/react/web/wallets/in-app/InAppWalletConnectUI.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);

// node_modules/thirdweb/dist/esm/react/web/wallets/in-app/InAppWalletFormUI.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
function InAppWalletFormUIScreen(props) {
  const isCompact = props.size === "compact";
  const { initialScreen, screen } = useScreenContext();
  const isInitialScreen = screen === props.wallet && initialScreen === props.wallet;
  const onBack = isInitialScreen ? void 0 : props.goBack;
  return (0, import_jsx_runtime.jsxs)(Container, { fullHeight: true, flex: "column", p: "lg", animate: "fadein", style: {
    minHeight: "250px"
  }, children: [isCompact && (isInitialScreen ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [(0, import_jsx_runtime.jsx)(ModalHeader, { onBack, leftAligned: true, title: (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [!props.meta.titleIconUrl ? null : (0, import_jsx_runtime.jsx)(Img, { src: props.meta.titleIconUrl, width: iconSize.md, height: iconSize.md, client: props.client }), (0, import_jsx_runtime.jsx)(ModalTitle, { children: props.meta.title ?? props.inAppWalletLocale.emailLoginScreen.title })] }) }), (0, import_jsx_runtime.jsx)(Spacer, { y: "lg" })] }) : (0, import_jsx_runtime.jsx)(ModalHeader, { onBack, title: props.inAppWalletLocale.signIn })), (0, import_jsx_runtime.jsx)(Container, { expand: true, flex: "column", center: "y", p: isCompact ? void 0 : "lg", children: (0, import_jsx_runtime.jsx)(ConnectWalletSocialOptions, { ...props, locale: props.inAppWalletLocale }) }), isCompact && (props.meta.showThirdwebBranding !== false || props.meta.termsOfServiceUrl || props.meta.privacyPolicyUrl) && (0, import_jsx_runtime.jsx)(Spacer, { y: "xl" }), (0, import_jsx_runtime.jsxs)(Container, { flex: "column", gap: "lg", children: [(0, import_jsx_runtime.jsx)(TOS, { termsOfServiceUrl: props.meta.termsOfServiceUrl, privacyPolicyUrl: props.meta.privacyPolicyUrl, locale: props.connectLocale.agreement }), props.meta.showThirdwebBranding !== false && (0, import_jsx_runtime.jsx)(PoweredByThirdweb, {})] })] });
}

// node_modules/thirdweb/dist/esm/react/web/wallets/in-app/InAppWalletConnectUI.js
function InAppWalletConnectUI(props) {
  const data = useSelectionData();
  const setSelectionData = useSetSelectionData();
  const state = data;
  const locale = useInAppWalletLocale(props.localeId);
  const { initialScreen } = useScreenContext();
  if (!locale) {
    return (0, import_jsx_runtime2.jsx)(LoadingScreen, {});
  }
  const goBackToMain = initialScreen === props.wallet ? () => {
    setSelectionData({});
  } : props.goBack;
  const otpUserInfo = (state == null ? void 0 : state.emailLogin) ? { email: state.emailLogin } : (state == null ? void 0 : state.phoneLogin) ? { phone: state.phoneLogin } : void 0;
  if (otpUserInfo) {
    return (0, import_jsx_runtime2.jsx)(OTPLoginUI, { userInfo: otpUserInfo, locale, done: props.done, goBack: goBackToMain, wallet: props.wallet, chain: props.chain, client: props.client, size: props.size });
  }
  if (state == null ? void 0 : state.passkeyLogin) {
    return (0, import_jsx_runtime2.jsx)(PassKeyLogin, { wallet: props.wallet, done: props.done, onBack: goBackToMain, chain: props.chain, client: props.client, size: props.size });
  }
  if (state == null ? void 0 : state.socialLogin) {
    return (0, import_jsx_runtime2.jsx)(SocialLogin, { socialAuth: state.socialLogin.type, locale, done: props.done, goBack: goBackToMain, wallet: props.wallet, state, chain: props.chain, client: props.client, size: props.size });
  }
  return (0, import_jsx_runtime2.jsx)(InAppWalletFormUIScreen, { select: () => {
  }, connectLocale: props.connectLocale, inAppWalletLocale: locale, done: props.done, goBack: props.goBack, wallet: props.wallet, client: props.client, meta: props.meta, size: props.size, chain: props.chain });
}
var InAppWalletConnectUI_default = InAppWalletConnectUI;
export {
  InAppWalletConnectUI_default as default
};
//# sourceMappingURL=InAppWalletConnectUI-NZ6YV76Y.js.map
