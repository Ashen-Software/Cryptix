{
  "version": 3,
  "sources": ["../../thirdweb/src/reactive/store.ts"],
  "sourcesContent": ["export type Store<T> = {\n  getValue(): T;\n  setValue(newValue: T): void;\n  subscribe(listener: () => void): () => void;\n};\n\n/**\n * Create a reactive value store\n * @param initialValue - The initial value to store\n * @example\n * ```ts\n * const store = createStore(0);\n * ```\n * @returns A store object\n * @internal\n */\nexport function createStore<T>(initialValue: T): Store<T> {\n  type Listener = () => void;\n  const listeners = new Set<Listener>();\n\n  let value = initialValue;\n\n  const notify = () => {\n    for (const listener of listeners) {\n      listener();\n    }\n  };\n\n  return {\n    getValue() {\n      return value;\n    },\n    setValue(newValue: T) {\n      value = newValue;\n      notify();\n    },\n    subscribe(listener: Listener) {\n      listeners.add(listener);\n      return () => {\n        listeners.delete(listener);\n      };\n    },\n  };\n}\n"],
  "mappings": ";AAgBM,SAAU,YAAe,cAAe;AAE5C,QAAM,YAAY,oBAAI,IAAG;AAEzB,MAAI,QAAQ;AAEZ,QAAM,SAAS,MAAK;AAClB,eAAW,YAAY,WAAW;AAChC,eAAQ;IACV;EACF;AAEA,SAAO;IACL,WAAQ;AACN,aAAO;IACT;IACA,SAAS,UAAW;AAClB,cAAQ;AACR,aAAM;IACR;IACA,UAAU,UAAkB;AAC1B,gBAAU,IAAI,QAAQ;AACtB,aAAO,MAAK;AACV,kBAAU,OAAO,QAAQ;MAC3B;IACF;;AAEJ;",
  "names": []
}
