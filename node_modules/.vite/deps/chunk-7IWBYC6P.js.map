{
  "version": 3,
  "sources": ["../../thirdweb/src/wallets/wallet-connect/receiver/request-handlers/sign-transaction.ts"],
  "sourcesContent": ["import {\n  type Hex,\n  hexToBigInt,\n  hexToNumber,\n} from \"../../../../utils/encoding/hex.js\";\nimport type { Account } from \"../../../interfaces/wallet.js\";\nimport type { WalletConnectTransactionRequestParams } from \"../types.js\";\nimport { validateAccountAddress } from \"../utils.js\";\n\n/**\n * @internal\n */\nexport async function handleSignTransactionRequest(options: {\n  account: Account;\n  params: WalletConnectTransactionRequestParams;\n}): Promise<Hex> {\n  const {\n    account,\n    params: [transaction],\n  } = options;\n\n  if (!account.signTransaction) {\n    throw new Error(\n      \"The current account does not support signing transactions\",\n    );\n  }\n\n  if (transaction.from !== undefined) {\n    validateAccountAddress(account, transaction.from);\n  }\n\n  return account.signTransaction({\n    gas: transaction.gas ? hexToBigInt(transaction.gas) : undefined,\n    gasPrice: transaction.gasPrice\n      ? hexToBigInt(transaction.gasPrice)\n      : undefined,\n    value: transaction.value ? hexToBigInt(transaction.value) : undefined,\n    nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n    to: transaction.to,\n    data: transaction.data,\n  });\n}\n"],
  "mappings": ";;;;;;;;;AAYA,eAAsB,6BAA6B,SAGlD;AACC,QAAM,EACJ,SACA,QAAQ,CAAC,WAAW,EAAC,IACnB;AAEJ,MAAI,CAAC,QAAQ,iBAAiB;AAC5B,UAAM,IAAI,MACR,2DAA2D;EAE/D;AAEA,MAAI,YAAY,SAAS,QAAW;AAClC,2BAAuB,SAAS,YAAY,IAAI;EAClD;AAEA,SAAO,QAAQ,gBAAgB;IAC7B,KAAK,YAAY,MAAM,YAAY,YAAY,GAAG,IAAI;IACtD,UAAU,YAAY,WAClB,YAAY,YAAY,QAAQ,IAChC;IACJ,OAAO,YAAY,QAAQ,YAAY,YAAY,KAAK,IAAI;IAC5D,OAAO,YAAY,QAAQ,YAAY,YAAY,KAAK,IAAI;IAC5D,IAAI,YAAY;IAChB,MAAM,YAAY;GACnB;AACH;",
  "names": []
}
