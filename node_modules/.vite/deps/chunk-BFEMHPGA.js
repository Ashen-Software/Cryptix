import {
  StyledCircle,
  StyledDiv,
  StyledInput,
  StyledLabel,
  StyledSvg,
  connectionManager,
  fontSize,
  iconSize,
  keyframes,
  radius,
  spacing,
  useCustomTheme
} from "./chunk-TS42ER4K.js";
import {
  require_jsx_runtime
} from "./chunk-PQVTKVEJ.js";
import {
  require_react
} from "./chunk-A4STD2P3.js";
import {
  __toESM
} from "./chunk-SEVZ5PBP.js";

// node_modules/thirdweb/dist/esm/react/core/hooks/wallets/useActiveAccount.js
var import_react = __toESM(require_react(), 1);
function useActiveAccountCore(manager) {
  const store = manager.activeAccountStore;
  return (0, import_react.useSyncExternalStore)(store.subscribe, store.getValue, store.getValue);
}

// node_modules/thirdweb/dist/esm/react/web/hooks/wallets/useActiveAccount.js
function useActiveAccount() {
  return useActiveAccountCore(connectionManager);
}

// node_modules/thirdweb/dist/esm/react/web/ui/ConnectWallet/constants.js
var reservedScreens = {
  main: "main",
  getStarted: "getStarted",
  signIn: "signIn",
  showAll: "showAll"
};
var modalMaxWidthCompact = "360px";
var wideModalWidth = 730;
var modalMaxWidthWide = `${wideModalWidth}px`;
var wideModalScreenThreshold = wideModalWidth + 40;
var wideModalMaxHeight = "570px";
var compactModalMaxHeight = "660px";
var modalCloseFadeOutDuration = 250;
function onModalUnmount(cb) {
  setTimeout(cb, modalCloseFadeOutDuration + 100);
}

// node_modules/thirdweb/dist/esm/react/web/ui/components/Spinner.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var Spinner = (props) => {
  const theme = useCustomTheme();
  return (0, import_jsx_runtime.jsx)(Svg, { style: {
    width: `${iconSize[props.size]}px`,
    height: `${iconSize[props.size]}px`
  }, viewBox: "0 0 50 50", children: (0, import_jsx_runtime.jsx)(Circle, { cx: "25", cy: "25", r: "20", fill: "none", stroke: theme.colors[props.color], strokeWidth: "4" }) });
};
var dashAnimation = keyframes`
  0% {
    stroke-dasharray: 1, 150;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -35;
  }
  100% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -124;
  }
`;
var rotateAnimation = keyframes`
  100% {
    transform: rotate(360deg);
  }
`;
var Svg = StyledSvg({
  animation: `${rotateAnimation} 2s linear infinite`,
  width: "1em",
  height: "1em"
});
var Circle = StyledCircle({
  strokeLinecap: "round",
  animation: `${dashAnimation} 1.5s ease-in-out infinite`
});

// node_modules/thirdweb/dist/esm/react/web/ui/components/formElements.js
var Label = StyledLabel((props) => {
  const theme = useCustomTheme();
  return {
    fontSize: fontSize.sm,
    color: theme.colors[props.color || "primaryText"],
    display: "block",
    fontWeight: 500
  };
});
var Input = StyledInput((props) => {
  const theme = useCustomTheme();
  return {
    fontSize: fontSize.md,
    fontFamily: "inherit",
    display: "block",
    padding: props.sm ? spacing.sm : fontSize.sm,
    boxSizing: "border-box",
    width: "100%",
    outline: "none",
    border: "none",
    borderRadius: radius.lg,
    color: theme.colors.primaryText,
    WebkitAppearance: "none",
    appearance: "none",
    background: "transparent",
    "&::placeholder": {
      color: theme.colors.secondaryText
    },
    boxShadow: `0 0 0 1.5px ${props.variant === "outline" ? theme.colors.borderColor : "transparent"}`,
    "&:-webkit-autofill": {
      WebkitTextFillColor: theme.colors.primaryText,
      WebkitBoxShadow: `0 0 0px 1000px ${theme.colors.inputAutofillBg} inset !important`,
      boxShadow: `0 0 0px 1000px ${theme.colors.inputAutofillBg} inset !important`,
      transition: "background-color 5000s ease-in-out 0s"
    },
    "&:-webkit-autofill:focus": {
      WebkitBoxShadow: `0 0 0px 1000px ${theme.colors.inputAutofillBg} inset, 0 0 0 2px ${props.variant === "outline" ? theme.colors.accentText : "transparent"} !important`,
      boxShadow: `0 0 0px 1000px ${theme.colors.inputAutofillBg} inset, 0 0 0 2px ${props.variant === "outline" ? theme.colors.accentText : "transparent"} !important`
    },
    "&[data-placeholder='true']": {
      color: theme.colors.secondaryText
    },
    "&:focus": {
      boxShadow: `0 0 0 2px ${theme.colors.accentText}`
    },
    "&[data-focus='false']:focus": {
      boxShadow: "none"
    },
    "&:not([type='password'])": {
      overflow: "hidden",
      textOverflow: "ellipsis",
      whiteSpace: "nowrap"
    },
    "&[data-error='true']": {
      boxShadow: `0 0 0 2px ${theme.colors.danger} !important`
    },
    "&[disabled]": {
      cursor: "not-allowed"
    },
    "&[type='number']::-webkit-outer-spin-button, &[type='number']::-webkit-inner-spin-button": {
      WebkitAppearance: "none",
      margin: 0
    },
    "&[type='number']": {
      appearance: "none",
      MozAppearance: "textfield"
    }
  };
});
var InputContainer = StyledDiv(() => {
  const theme = useCustomTheme();
  return {
    display: "flex",
    borderRadius: radius.lg,
    boxShadow: `0 0 0px 1.5px ${theme.colors.borderColor}`,
    "&:focus-within": {
      boxShadow: `0 0 0px 2px ${theme.colors.accentText}`
    },
    "input:focus": {
      boxShadow: "none"
    },
    // show error ring on container instead of input
    "&[data-error='true']": {
      boxShadow: `0 0 0px 2px ${theme.colors.danger}`
    }
  };
});

export {
  useActiveAccount,
  reservedScreens,
  modalMaxWidthCompact,
  modalMaxWidthWide,
  wideModalScreenThreshold,
  wideModalMaxHeight,
  compactModalMaxHeight,
  modalCloseFadeOutDuration,
  onModalUnmount,
  Spinner,
  Label,
  Input,
  InputContainer
};
//# sourceMappingURL=chunk-BFEMHPGA.js.map
