{
  "version": 3,
  "sources": ["../../thirdweb/src/wallets/wallet-connect/receiver/request-handlers/sign-typed-data.ts"],
  "sourcesContent": ["import type { Hex } from \"../../../../utils/encoding/hex.js\";\nimport type { Account } from \"../../../interfaces/wallet.js\";\nimport type { WalletConnectSignTypedDataRequestParams } from \"../types.js\";\nimport { validateAccountAddress } from \"../utils.js\";\n\n/**\n * @internal\n */\nexport async function handleSignTypedDataRequest(options: {\n  account: Account;\n  params: WalletConnectSignTypedDataRequestParams;\n}): Promise<Hex> {\n  const { account, params } = options;\n\n  validateAccountAddress(account, params[0]);\n\n  return account.signTypedData(\n    // The data could be sent to us as a string or object, depending on the level of parsing on the client side\n    typeof params[1] === \"string\" ? JSON.parse(params[1]) : params[1],\n  );\n}\n"],
  "mappings": ";;;;;AAQA,eAAsB,2BAA2B,SAGhD;AACC,QAAM,EAAE,SAAS,OAAM,IAAK;AAE5B,yBAAuB,SAAS,OAAO,CAAC,CAAC;AAEzC,SAAO,QAAQ;;IAEb,OAAO,OAAO,CAAC,MAAM,WAAW,KAAK,MAAM,OAAO,CAAC,CAAC,IAAI,OAAO,CAAC;EAAC;AAErE;",
  "names": []
}
