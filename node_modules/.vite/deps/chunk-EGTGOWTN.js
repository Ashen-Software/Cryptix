import {
  connectionManager,
  queryOptions,
  useQuery
} from "./chunk-TS42ER4K.js";
import {
  require_react
} from "./chunk-A4STD2P3.js";
import {
  getWalletBalance
} from "./chunk-62SMVODG.js";
import {
  __toESM
} from "./chunk-SEVZ5PBP.js";

// node_modules/thirdweb/dist/esm/react/core/hooks/wallets/useActiveWallet.js
var import_react = __toESM(require_react(), 1);
function useActiveWalletCore(manager) {
  const store = manager.activeWalletStore;
  return (0, import_react.useSyncExternalStore)(store.subscribe, store.getValue, store.getValue);
}

// node_modules/thirdweb/dist/esm/react/web/hooks/wallets/useActiveWallet.js
function useActiveWallet() {
  return useActiveWalletCore(connectionManager);
}

// node_modules/thirdweb/dist/esm/react/core/hooks/others/useWalletBalance.js
function useWalletBalance(options) {
  const { chain, address, tokenAddress, client } = options;
  const query = queryOptions({
    queryKey: [
      "walletBalance",
      (chain == null ? void 0 : chain.id) || -1,
      address || "0x0",
      { tokenAddress }
    ],
    queryFn: async () => {
      if (!chain) {
        throw new Error("chain is required");
      }
      if (!client) {
        throw new Error("client is required");
      }
      if (!address) {
        throw new Error("address is required");
      }
      return getWalletBalance({ chain, client, address, tokenAddress });
    },
    enabled: !!chain && !!client && !!address
  });
  return useQuery(query);
}

export {
  useActiveWallet,
  useWalletBalance
};
//# sourceMappingURL=chunk-EGTGOWTN.js.map
