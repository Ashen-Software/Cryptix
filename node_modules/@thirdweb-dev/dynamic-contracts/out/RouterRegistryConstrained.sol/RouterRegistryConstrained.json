{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_registry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WriteError",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "metadataURI",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "internalType": "struct IExtension.ExtensionMetadata",
              "name": "metadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "functionSelector",
                  "type": "bytes4"
                },
                {
                  "internalType": "string",
                  "name": "functionSignature",
                  "type": "string"
                }
              ],
              "internalType": "struct IExtension.ExtensionFunction[]",
              "name": "functions",
              "type": "tuple[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IExtension.Extension",
          "name": "extension",
          "type": "tuple"
        }
      ],
      "name": "ExtensionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "metadataURI",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "internalType": "struct IExtension.ExtensionMetadata",
              "name": "metadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "functionSelector",
                  "type": "bytes4"
                },
                {
                  "internalType": "string",
                  "name": "functionSignature",
                  "type": "string"
                }
              ],
              "internalType": "struct IExtension.ExtensionFunction[]",
              "name": "functions",
              "type": "tuple[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IExtension.Extension",
          "name": "extension",
          "type": "tuple"
        }
      ],
      "name": "ExtensionRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "metadataURI",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "internalType": "struct IExtension.ExtensionMetadata",
              "name": "metadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "functionSelector",
                  "type": "bytes4"
                },
                {
                  "internalType": "string",
                  "name": "functionSignature",
                  "type": "string"
                }
              ],
              "internalType": "struct IExtension.ExtensionFunction[]",
              "name": "functions",
              "type": "tuple[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IExtension.Extension",
          "name": "extension",
          "type": "tuple"
        }
      ],
      "name": "ExtensionReplaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "functionSelector",
          "type": "bytes4"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IExtension.ExtensionMetadata",
          "name": "extMetadata",
          "type": "tuple"
        }
      ],
      "name": "FunctionDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "functionSelector",
          "type": "bytes4"
        },
        {
          "components": [
            {
              "internalType": "bytes4",
              "name": "functionSelector",
              "type": "bytes4"
            },
            {
              "internalType": "string",
              "name": "functionSignature",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IExtension.ExtensionFunction",
          "name": "extFunction",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IExtension.ExtensionMetadata",
          "name": "extMetadata",
          "type": "tuple"
        }
      ],
      "name": "FunctionEnabled",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_extensionName",
          "type": "string"
        },
        {
          "internalType": "bytes4",
          "name": "_functionSelector",
          "type": "bytes4"
        }
      ],
      "name": "_disableFunctionInExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "metadataURI",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "internalType": "struct IExtension.ExtensionMetadata",
              "name": "metadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "functionSelector",
                  "type": "bytes4"
                },
                {
                  "internalType": "string",
                  "name": "functionSignature",
                  "type": "string"
                }
              ],
              "internalType": "struct IExtension.ExtensionFunction[]",
              "name": "functions",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IExtension.Extension",
          "name": "_extension",
          "type": "tuple"
        }
      ],
      "name": "addExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultExtensions",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_extensionName",
          "type": "string"
        },
        {
          "internalType": "bytes4",
          "name": "_functionSelector",
          "type": "bytes4"
        }
      ],
      "name": "disableFunctionInExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_extensionName",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "bytes4",
              "name": "functionSelector",
              "type": "bytes4"
            },
            {
              "internalType": "string",
              "name": "functionSignature",
              "type": "string"
            }
          ],
          "internalType": "struct IExtension.ExtensionFunction",
          "name": "_function",
          "type": "tuple"
        }
      ],
      "name": "enableFunctionInExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllExtensions",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "metadataURI",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "internalType": "struct IExtension.ExtensionMetadata",
              "name": "metadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "functionSelector",
                  "type": "bytes4"
                },
                {
                  "internalType": "string",
                  "name": "functionSignature",
                  "type": "string"
                }
              ],
              "internalType": "struct IExtension.ExtensionFunction[]",
              "name": "functions",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IExtension.Extension[]",
          "name": "allExtensions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "extensionName",
          "type": "string"
        }
      ],
      "name": "getExtension",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "metadataURI",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "internalType": "struct IExtension.ExtensionMetadata",
              "name": "metadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "functionSelector",
                  "type": "bytes4"
                },
                {
                  "internalType": "string",
                  "name": "functionSignature",
                  "type": "string"
                }
              ],
              "internalType": "struct IExtension.ExtensionFunction[]",
              "name": "functions",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IExtension.Extension",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_functionSelector",
          "type": "bytes4"
        }
      ],
      "name": "getImplementationForFunction",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "functionSelector",
          "type": "bytes4"
        }
      ],
      "name": "getMetadataForFunction",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "internalType": "struct IExtension.ExtensionMetadata",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract ExtensionRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_extensionName",
          "type": "string"
        }
      ],
      "name": "removeExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "metadataURI",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "internalType": "struct IExtension.ExtensionMetadata",
              "name": "metadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "functionSelector",
                  "type": "bytes4"
                },
                {
                  "internalType": "string",
                  "name": "functionSignature",
                  "type": "string"
                }
              ],
              "internalType": "struct IExtension.ExtensionFunction[]",
              "name": "functions",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IExtension.Extension",
          "name": "_extension",
          "type": "tuple"
        }
      ],
      "name": "replaceExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "761:1632:21:-:0;;;998:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1040:18;;;1056:1;1040:18;;;;;;;;;;;;;761:1632;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;761:1632:21;;;;;;;;;;;;;1040:18;;;;;;;;;;;;;;;-1:-1:-1;1015:18:31;;987:15;;1015:22;1012:146;;1053:32;1073:11;1053:19;:32::i;:::-;1109:38;1134:11;1123:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;1109:13;;;;;:38;;:::i;:::-;1099:48;;1012:146;-1:-1:-1;;;;;1168:27:31;;;;;1070:5:21::1;:18:::0;;-1:-1:-1;;;;;;1070:18:21;;::::1;1078:10;1070:18;::::0;;;;1098:39;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;761:1632:21;;3368:390:31;3464:18;;3508:4;3450:11;3523:169;3547:3;3543:1;:7;3523:169;;;3584:33;3602:11;3614:1;3602:14;;;;;;;;:::i;:::-;;;;;;;3584:17;;;:33;;:::i;:::-;3574:43;;3635:7;3631:51;3662:5;3631:51;3552:6;3557:1;3552:6;;:::i;:::-;;;3523:169;;;;3709:7;3701:50;;;;-1:-1:-1;;;3701:50:31;;3986:2:37;3701:50:31;;;3968:21:37;4025:2;4005:18;;;3998:30;4064:32;4044:18;;;4037:60;4114:18;;3701:50:31;;;;;;;;3438:320;;3368:390;:::o;583:460:17:-;636:15;736:17;756:94;831:5;788:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;756:24;;;;;:94;;:::i;:::-;736:114;;946:4;940:11;935:2;929:4;925:13;922:1;915:37;904:48;-1:-1:-1;;;;;;996:21:17;;992:46;;1026:12;;-1:-1:-1;;;1026:12:17;;;;;;;;;;;992:46;653:390;583:460;;;:::o;3764:1686:31:-;3879:19;;:24;3873:38;3838:12;;3873:42;;;;:140;;;3950:24;:22;;;;;:24;;:::i;:::-;:37;;3988:10;:19;;;:24;;;3950:63;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3949:64;3873:140;:219;;;;-1:-1:-1;4044:19:31;;:34;;;-1:-1:-1;;;;;4044:48:31;;;3873:219;3862:230;;4205:4;4139:24;:22;;;;;:24;;:::i;:::-;:37;;4177:10;:19;;;:24;;;4139:63;;;;;;:::i;:::-;;;;;;;;;;;;;;:70;;;;;-1:-1:-1;;4139:70:31;;;;;;;;;4224:7;4220:50;;-1:-1:-1;4254:5:31;;3764:1686;-1:-1:-1;3764:1686:31:o;4220:50::-;4302:20;;;;:27;4288:11;4340:1104;4363:3;4359:1;:7;4340:1104;;;4395:7;4391:51;4422:5;4391:51;4456:37;4496:10;:20;;;4517:1;4496:23;;;;;;;;:::i;:::-;;;;;;;;;;;4802:29;;4496:23;;-1:-1:-1;4764:13:31;;-1:-1:-1;;;;;;4802:42:31;4799:352;;4942:23;;;;;;5071:2:37;5053:21;;;5110:1;5090:18;;;5083:29;-1:-1:-1;;;5143:2:37;5128:18;;5121:39;5192:2;5177:18;;4869:332;4942:23:31;;;;;;;;;;;;;4932:34;;;;;;4896:12;:30;;;4885:42;;;;;;;;:::i;:::-;;;;;;;;;;;;;4875:53;;;;;;:91;;4864:102;;4799:352;;;5103:30;;;;;5086:48;;;;;;:::i;:::-;;;;;;;;;;;;;5076:59;;;;;;-1:-1:-1;;;;;5016:120:31;;:12;:29;;;-1:-1:-1;;;;;5016:120:31;;;;5005:131;;4799:352;5252:8;5251:9;:81;;;;;5265:24;:22;;;;;:24;;:::i;:::-;5302:29;;-1:-1:-1;;;;;;5265:67:31;:36;:67;;;;;;;;;;;;;;5264:68;5251:81;5241:91;;5429:4;5359:24;:22;;;;;:24;;:::i;:::-;5396:29;;-1:-1:-1;;;;;;5359:67:31;:36;:67;;;;;;;;;;;;:74;;-1:-1:-1;;5359:74:31;;;;;;;;;;;-1:-1:-1;4368:6:31;-1:-1:-1;4368:6:31;;:::i;:::-;;;4340:1104;;;;3852:1598;3764:1686;;;:::o;378:700:18:-;446:12;1002:5;:12;1062:5;956:117;;;;;;;;;:::i;:::-;;;;;;;;;;;;;949:124;;378:700;;;:::o;778:187:28:-;817:18;;374:45;418:1;382:32;374:45;:::i;:::-;363:57;;;;;;6406:25:37;;6394:2;6379:18;;6260:177;363:57:28;;;;-1:-1:-1;;363:57:28;;;;;;;;;353:68;;363:57;353:68;;;;;778:187;-1:-1:-1;;778:187:28:o;14:290:37:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:37;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:37:o;441:250::-;526:1;536:113;550:6;547:1;544:13;536:113;;;626:11;;;620:18;607:11;;;600:39;572:2;565:10;536:113;;;-1:-1:-1;;683:1:37;665:16;;658:27;441:250::o;696:271::-;738:3;776:5;770:12;803:6;798:3;791:19;819:76;888:6;881:4;876:3;872:14;865:4;858:5;854:16;819:76;:::i;:::-;949:2;928:15;-1:-1:-1;;924:29:37;915:39;;;;956:4;911:50;;696:271;-1:-1:-1;;696:271:37:o;972:2413::-;1170:4;1199:2;1239;1228:9;1224:18;1269:2;1258:9;1251:21;1292:6;1327;1321:13;1358:6;1350;1343:22;1384:2;1374:12;;1417:2;1406:9;1402:18;1395:25;;1479:2;1469:6;1466:1;1462:14;1451:9;1447:30;1443:39;1517:2;1509:6;1505:15;1538:1;1559;1569:1787;1585:6;1580:3;1577:15;1569:1787;;;1652:2;1648:7;1708:2;1696:9;1688:6;1684:22;1680:31;1675:3;1668:44;1741:6;1735:13;1787:2;1781:9;1818:2;1810:6;1803:18;1862:12;1856:19;1898:4;1939:2;1934;1926:6;1922:15;1915:27;1969:51;2015:3;2007:6;2003:16;1987:14;1969:51;:::i;:::-;1955:65;;2079:2;2065:12;2061:21;2055:28;2145:2;2136:6;2128;2124:19;2120:28;2115:2;2107:6;2103:15;2096:53;2176:41;2210:6;2194:14;2176:41;:::i;:::-;2265:21;;;2259:28;-1:-1:-1;;;;;2255:54:37;2249:3;2237:16;;2230:80;-1:-1:-1;;;2351:11:37;;;2345:18;2400:19;;;2383:15;;;2376:44;2481:21;;2515:24;;;2162:55;;-1:-1:-1;2670:23:37;;;2561:15;;;;2623:1;2619:16;;;2607:29;;2603:38;;2717:1;2731:516;2747:8;2742:3;2739:17;2731:516;;;2828:19;;;-1:-1:-1;;2824:33:37;2810:48;;2885:15;;2936:9;;-1:-1:-1;;;;;;2932:36:37;2917:52;;3014:11;;3008:18;3050:15;;;3043:27;;;3097:50;3131:15;;;3008:18;3097:50;:::i;:::-;3176:17;;;;3219:14;;;;3087:60;-1:-1:-1;;2775:1:37;2766:11;2731:516;;;-1:-1:-1;3334:12:37;;;;3270:6;-1:-1:-1;;;3299:15:37;;;;-1:-1:-1;;1611:1:37;1602:11;1569:1787;;;-1:-1:-1;3373:6:37;;972:2413;-1:-1:-1;;;;;;;;;972:2413:37:o;3390:127::-;3451:10;3446:3;3442:20;3439:1;3432:31;3482:4;3479:1;3472:15;3506:4;3503:1;3496:15;3522:127;3583:10;3578:3;3574:20;3571:1;3564:31;3614:4;3611:1;3604:15;3638:4;3635:1;3628:15;3654:125;3719:9;;;3740:10;;;3737:36;;;3753:18;;:::i;:::-;3654:125;;;;:::o;4143:427::-;4403:1;4398:3;4391:14;4373:3;4434:6;4428:13;4450:74;4517:6;4513:1;4508:3;4504:11;4497:4;4489:6;4485:17;4450:74;:::i;:::-;4544:16;;;;4562:1;4540:24;;4143:427;-1:-1:-1;;4143:427:37:o;4575:289::-;4706:3;4744:6;4738:13;4760:66;4819:6;4814:3;4807:4;4799:6;4795:17;4760:66;:::i;:::-;4842:16;;;;;4575:289;-1:-1:-1;;4575:289:37:o;5206:220::-;5355:2;5344:9;5337:21;5318:4;5375:45;5416:2;5405:9;5401:18;5393:6;5375:45;:::i;5431:691::-;-1:-1:-1;;;5806:16:37;;5877:3;5855:16;;;-1:-1:-1;;;;;;5851:43:37;5847:1;5838:11;;5831:64;-1:-1:-1;;;5920:1:37;5911:11;;5904:51;5978:13;;-1:-1:-1;;6000:75:37;5978:13;6063:2;6054:12;;6047:4;6035:17;;6000:75;:::i;:::-;6095:16;;;;6113:2;6091:25;;5431:691;-1:-1:-1;;;5431:691:37:o;6127:128::-;6194:9;;;6215:11;;;6212:37;;;6229:18;;:::i;6260:177::-;761:1632:21;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "761:1632:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;668:22:19;693:37;722:7;;-1:-1:-1;;;;;;722:7:19;693:28;:37::i;:::-;668:62;-1:-1:-1;;;;;;748:28:19;;740:73;;;;-1:-1:-1;;;740:73:19;;216:2:37;740:73:19;;;198:21:37;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;740:73:19;;;;;;;;;823:25;833:14;823:9;:25::i;:::-;658:197;8643:813:32;;;;;;;;;;-1:-1:-1;8643:813:32;;;;;:::i;:::-;;:::i;808:42:31:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2584:32:37;;;2566:51;;2554:2;2539:18;808:42:31;;;;;;;;1246:399:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4390:205::-;;;;;;;;;;-1:-1:-1;4390:205:32;;;;;:::i;:::-;;:::i;1187:165:21:-;;;;;;;;;;-1:-1:-1;1187:165:21;;;;;:::i;:::-;;:::i;843:33::-;;;;;;;;;;-1:-1:-1;843:33:21;;;;-1:-1:-1;;;;;843:33:21;;;3929:205:32;;;;;;;;;;-1:-1:-1;3929:205:32;;;;;:::i;:::-;;:::i;1895:198::-;;;;;;;;;;-1:-1:-1;1895:198:32;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3209:135::-;;;;;;;;;;-1:-1:-1;3209:135:32;;;;;:::i;:::-;;:::i;2379:150::-;;;;;;;;;;-1:-1:-1;2379:150:32;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3128:191:31:-;;;;;;;;;;-1:-1:-1;3128:191:31;;;;;:::i;:::-;;:::i;2837:131:32:-;;;;;;;;;;-1:-1:-1;2837:131:32;;;;;:::i;:::-;;:::i;3495:138::-;;;;;;;;;;-1:-1:-1;3495:138:32;;;;;:::i;:::-;;:::i;817:20:21:-;;;;;;;;;;-1:-1:-1;817:20:21;;;;-1:-1:-1;;;;;817:20:21;;;3128:191:31;3230:7;3256:41;3279:17;3256:22;:41::i;:::-;:56;;;;3128:191;-1:-1:-1;;3128:191:31:o;924:895:19:-;1262:14;1259:1;1256;1243:34;1476:1;1473;1457:14;1454:1;1438:14;1431:5;1418:60;1552:16;1549:1;1546;1531:38;1590:6;1657:66;;;;1772:16;1769:1;1762:27;1657:66;1692:16;1689:1;1682:27;1583:220;;;924:895;:::o;8643:813:32:-;1712:4:21;1749:5;-1:-1:-1;;;;;1749:5:21;1735:10;:19;839:72:32;;;;-1:-1:-1;;;839:72:32;;;;;;;:::i;:::-;8911:65:::1;8942:14;8958:17;8911:30;:65::i;:::-;8903:134;;;::::0;-1:-1:-1;;;8903:134:32;;11264:2:37;8903:134:32::1;::::0;::::1;11246:21:37::0;11303:2;11283:18;;;11276:30;11342:34;11322:18;;;11315:62;11413:26;11393:18;;;11386:54;11457:19;;8903:134:32::1;11062:420:37::0;8903:134:32::1;9052:36;9091:26;:24;:26::i;:::-;-1:-1:-1::0;;;;;;9091:63:32;::::1;;::::0;;;:44:::1;::::0;;;::::1;:63;::::0;;;;;;9052:102;;::::1;::::0;::::1;::::0;;;;;;;9091:63;;9052:102:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;9052:102:32;;;-1:-1:-1;;9052:102:32::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;9052:102:32::1;;::::0;;::::1;::::0;;-1:-1:-1;9212:57:32::1;9235:14:::0;9251:17;9212:22:::1;:57::i;:::-;9324:45;9351:17;9324:26;:45::i;:::-;9418:17;-1:-1:-1::0;;;;;9385:64:32::1;;9402:14;9385:64;;;;;;:::i;:::-;;;;;;;;;9437:11;9385:64;;;;;;:::i;:::-;;;;;;;;8770:686;8643:813:::0;;:::o;1246:399::-;1314:32;1359:21;1383:50;:26;:24;:26::i;:::-;:48;:50::i;:::-;1457:12;;1359:74;;-1:-1:-1;1457:12:32;-1:-1:-1;;;;;1504:20:32;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1504:20:32;;;;;;;;;;;;;;;;1488:36;;1540:9;1535:104;1559:3;1555:1;:7;1535:104;;;1605:23;1619:5;1625:1;1619:8;;;;;;;;:::i;:::-;;;;;;;1605:13;:23::i;:::-;1586:13;1600:1;1586:16;;;;;;;;:::i;:::-;;;;;;;;;;:42;1564:6;1569:1;1564:6;;:::i;:::-;;;1535:104;;;;1348:297;;1246:399;:::o;4390:205::-;1712:4:21;1749:5;-1:-1:-1;;;;;1749:5:21;1735:10;:19;839:72:32;;;;-1:-1:-1;;;839:72:32;;;;;;;:::i;:::-;4526:62:::1;4554:14;4570:17;4526:27;:62::i;:::-;4390:205:::0;;:::o;1187:165:21:-;1262:5;;-1:-1:-1;;;;;1262:5:21;1248:10;:19;1240:81;;;;-1:-1:-1;;;1240:81:21;;12762:2:37;1240:81:21;;;12744:21:37;12801:2;12781:18;;;12774:30;12840:34;12820:18;;;12813:62;-1:-1:-1;;;12891:18:37;;;12884:47;12948:19;;1240:81:21;12560:413:37;1240:81:21;1331:5;:14;;-1:-1:-1;;;;;;1331:14:21;-1:-1:-1;;;;;1331:14:21;;;;;;;;;;1187:165::o;3929:205:32:-;1712:4:21;1749:5;-1:-1:-1;;;;;1749:5:21;1735:10;:19;839:72:32;;;;-1:-1:-1;;;839:72:32;;;;;;;:::i;:::-;4074:53:::1;4101:14;4117:9;4074:26;:53::i;1895:198::-:0;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;2024:26:32;:24;:26::i;:::-;-1:-1:-1;;;;;;2024:62:32;;;;;;:44;;;;;:62;;;;;;;2017:69;;;;;;;;;;;;2024:62;;2017:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2017:69:32;;;-1:-1:-1;;2017:69:32;;;;;;-1:-1:-1;;;;;2017:69:32;;;;;;;1895:198;-1:-1:-1;;1895:198:32:o;3209:135::-;1712:4:21;1749:5;-1:-1:-1;;;;;1749:5:21;1735:10;:19;839:72:32;;;;-1:-1:-1;;;839:72:32;;;;;;;:::i;:::-;3308:29:::1;3326:10;3308:17;:29::i;:::-;3209:135:::0;:::o;2379:150::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2494:28:32;2508:13;2494;:28::i;:::-;2487:35;2379:150;-1:-1:-1;;2379:150:32:o;2837:131::-;1712:4:21;1749:5;-1:-1:-1;;;;;1749:5:21;1735:10;:19;839:72:32;;;;-1:-1:-1;;;839:72:32;;;;;;;:::i;:::-;2936:25:::1;2950:10;2936:13;:25::i;3495:138::-:0;1712:4:21;1749:5;-1:-1:-1;;;;;1749:5:21;1735:10;:19;839:72:32;;;;-1:-1:-1;;;839:72:32;;;;;;;:::i;:::-;3594:32:::1;3611:14;3594:16;:32::i;583:460:17:-:0;636:15;736:17;756:94;831:5;788:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;756:24;:94::i;:::-;736:114;;946:4;940:11;935:2;929:4;925:13;922:1;915:37;904:48;-1:-1:-1;;;;;;996:21:17;;992:46;;1026:12;;-1:-1:-1;;;1026:12:17;;;;;;;;;;;992:46;653:390;583:460;;;:::o;378:700:18:-;446:12;1002:5;:12;1062:5;956:117;;;;;;;;;:::i;:::-;;;;;;;;;;;;;949:124;;378:700;;;:::o;778:187:28:-;817:18;;374:45;418:1;382:32;374:45;:::i;:::-;363:57;;;;;;14385:25:37;;14373:2;14358:18;;14239:177;363:57:28;;;;-1:-1:-1;;363:57:28;;;;;;;;;353:68;;363:57;353:68;;;;;778:187;-1:-1:-1;;778:187:28:o;15966:610:32:-;16093:4;16175:66;16226:14;16175:26;:24;:26::i;:::-;:41;:50;:66::i;:::-;16167:122;;;;-1:-1:-1;;;16167:122:32;;;;;;;:::i;:::-;16488:14;16477:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;16467:37;;;;;;16393:26;:24;:26::i;:::-;-1:-1:-1;;;;;;16393:63:32;;;;;;:44;;;;;:63;;;;;;;;;16382:80;;;;16393:63;16382:80;;:::i;:::-;;;;;;;;;;;;;16372:91;;;;;;:132;16364:183;;;;-1:-1:-1;;;16364:183:32;;16354:2:37;16364:183:32;;;16336:21:37;16393:2;16373:18;;;16366:30;16432:34;16412:18;;;16405:62;-1:-1:-1;;;16483:18:37;;;16476:36;16529:19;;16364:183:32;16152:402:37;16364:183:32;-1:-1:-1;16565:4:32;15966:610;;;;:::o;16638:156::-;16697:41;16757:30;:28;:30::i;:::-;16750:37;;16638:156;:::o;12155:778::-;12262:45;12310:26;:24;:26::i;:::-;:37;;12348:14;12310:53;;;;;;:::i;:::-;;;;;;;;;;;;;:63;;12262:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12262:111:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12398:25:32;;12262:111;;-1:-1:-1;12384:11:32;;-1:-1:-1;;12433:494:32;12457:3;12453:1;:7;12433:494;;;12529:17;-1:-1:-1;;;;;12487:59:32;;:18;12506:1;12487:21;;;;;;;;:::i;:::-;;;;;;;:38;;;-1:-1:-1;;;;;12487:59:32;;;12484:433;;12720:26;:24;:26::i;:::-;:37;;12758:14;12720:53;;;;;;:::i;:::-;;;;;;;;;;;;;;:63;;12784:7;12790:1;12784:3;:7;:::i;:::-;12720:72;;;;;;;;:::i;:::-;;;;;;;;;;;12651:26;:24;:26::i;:::-;:37;;12689:14;12651:53;;;;;;:::i;:::-;;;;;;;;;;;;;:63;;12715:1;12651:66;;;;;;;;:::i;:::-;;;;;;;;;:141;;:66;;;;;:141;;-1:-1:-1;;12651:141:32;;;;;;;;;;;-1:-1:-1;12651:141:32;;;;;;;;;;:::i;:::-;;;;;12810:26;:24;:26::i;:::-;:37;;12848:14;12810:53;;;;;;:::i;:::-;;;;;;;;;;;;;:63;;:69;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;12810:69:32;;;;;;;;;-1:-1:-1;;12810:69:32;;;;;;;;;;:::i;:::-;;;;;12897:5;;12484:433;12462:6;12467:1;12462:6;;:::i;:::-;;;12433:494;;;;12252:681;;12155:778;;:::o;10524:158::-;10612:26;:24;:26::i;:::-;-1:-1:-1;;;;;;10612:63:32;;;;;;:44;;;;;:63;;;;;;10605:70;10612:63;;10605:70;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;10605:70:32;;;;-1:-1:-1;;;;;;10605:70:32;;;-1:-1:-1;10524:158:32:o;5960:109:30:-;6016:15;6050:12;6058:3;6050:7;:12::i;9515:171:32:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9626:26:32;:24;:26::i;:::-;:37;;9664:14;9626:53;;;;;;:::i;:::-;;;;;;;;;;;;;;;9619:60;;;;;;;9626:53;;;;9619:60;;;;9626:53;;9619:60;;9626:53;;9619:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9619:60:32;;;-1:-1:-1;;9619:60:32;;;;;;-1:-1:-1;;;;;9619:60:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9619:60:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9619:60:32;;-1:-1:-1;9619:60:32;;9515:171;-1:-1:-1;;;9515:171:32:o;7834:746::-;8029:56;8059:14;8075:9;8029:29;:56::i;:::-;8021:124;;;;-1:-1:-1;;;8021:124:32;;19050:2:37;8021:124:32;;;19032:21:37;19089:2;19069:18;;;19062:30;19128:34;19108:18;;;19101:62;19199:25;19179:18;;;19172:53;19242:19;;8021:124:32;18848:419:37;8021:124:32;8209:44;8227:14;8243:9;8209:17;:44::i;:::-;8264:33;8300:26;:24;:26::i;:::-;:37;;8338:14;8300:53;;;;;;:::i;:::-;;;;;;;;;;;;;;;8264:98;;;;;;;;8300:53;;;;8264:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8264:98:32;;;-1:-1:-1;;8264:98:32;;;;;;-1:-1:-1;;;;;8264:98:32;;;;;;8440:26;;8264:98;;-1:-1:-1;8416:61:32;;8264:98;8416:23;:61::i;:::-;8525:9;:26;;;-1:-1:-1;;;;;8493:80:32;;8509:14;8493:80;;;;;;:::i;:::-;;;;;;;;;8553:9;8564:8;8493:80;;;;;;;:::i;5935:1095::-;6154:32;6175:10;6154:20;:32::i;:::-;6146:88;;;;-1:-1:-1;;;6146:88:32;;20002:2:37;6146:88:32;;;19984:21:37;20041:2;20021:18;;;20014:30;20080:34;20060:18;;;20053:62;-1:-1:-1;;;20131:18:37;;;20124:41;20182:19;;6146:88:32;19800:407:37;6146:88:32;6323:19;;:24;;6298:71;;:24;:71::i;:::-;6495:19;;:24;6462:58;;:32;:58::i;:::-;6553:20;;;;:27;6539:11;6590:327;6614:3;6610:1;:7;6590:327;;;6690:68;6708:10;:19;;;:24;;;6734:10;:20;;;6755:1;6734:23;;;;;;;;:::i;:::-;;;;;;;6690:17;:68::i;:::-;6820:86;6844:10;:20;;;6865:1;6844:23;;;;;;;;:::i;:::-;;;;;;;:40;;;6886:10;:19;;;6820:23;:86::i;:::-;6619:6;6624:1;6619:6;;:::i;:::-;;;6590:327;;;-1:-1:-1;6976:19:32;;:34;;;;;6950:24;;6932:91;;-1:-1:-1;;;;;6932:91:32;;;;;;6950:24;6932:91;:::i;:::-;;;;;;;;;7012:10;6932:91;;;;;;:::i;:::-;;;;;;;;6008:1022;5935:1095;:::o;4840:1025::-;5167:28;5184:10;5167:16;:28::i;:::-;5159:80;;;;-1:-1:-1;;;5159:80:32;;20414:2:37;5159:80:32;;;20396:21:37;20453:2;20433:18;;;20426:30;20492:34;20472:18;;;20465:62;-1:-1:-1;;;20543:18:37;;;20536:37;20590:19;;5159:80:32;20212:403:37;5159:80:32;5320:19;;:24;;5295:71;;:24;:71::i;:::-;5391:20;;;;:27;5377:11;5428:327;5452:3;5448:1;:7;5428:327;;;5528:68;5546:10;:19;;;:24;;;5572:10;:20;;;5593:1;5572:23;;;;;;;;:::i;5528:68::-;5658:86;5682:10;:20;;;5703:1;5682:23;;;;;;;;:::i;5658:86::-;5457:6;5462:1;5457:6;;:::i;:::-;;;5428:327;;;-1:-1:-1;5811:19:32;;:34;;;;;5785:24;;5770:88;;-1:-1:-1;;;;;5770:88:32;;;;;;5785:24;5770:88;:::i;:::-;;;;;;;;;5847:10;5770:88;;;;;;:::i;7095:671::-;7284:35;7304:14;7284:19;:35::i;:::-;7276:90;;;;-1:-1:-1;;;7276:90:32;;20822:2:37;7276:90:32;;;20804:21:37;20861:2;20841:18;;;20834:30;20900:34;20880:18;;;20873:62;-1:-1:-1;;;20951:18:37;;;20944:40;21001:19;;7276:90:32;20620:406:37;7276:90:32;7377:26;7406;:24;:26::i;:::-;:37;;7444:14;7406:53;;;;;;:::i;:::-;;;;;;;;;;;;;;;7377:82;;;;;;;7406:53;;;;7377:82;;;;7406:53;;7377:82;;7406:53;;7377:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7377:82:32;;;-1:-1:-1;;7377:82:32;;;;;;-1:-1:-1;;;;;7377:82:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7377:82:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7516:43;7544:14;7516:27;:43::i;:::-;7652:48;7685:14;7652:32;:48::i;:::-;7733:14;7716:43;;;;;;:::i;:::-;;;;;;;;;7749:9;7716:43;;;;;;:::i;:::-;;;;;;;;7168:598;7095:671;:::o;4645:130:30:-;4724:4;4747:21;4757:3;4762:5;4747:9;:21::i;:::-;4740:28;4645:130;-1:-1:-1;;;4645:130:30:o;1070:193:29:-;1109:18;;484:51;534:1;492:38;484:51;:::i;3882:108:30:-;3938:15;3972:3;:11;;3965:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3882:108;;;:::o;15505:351:32:-;15631:4;15713:66;15764:14;15713:26;:24;:26::i;:66::-;15705:122;;;;-1:-1:-1;;;15705:122:32;;;;;;;:::i;10754:1329::-;11127:29;;11093:13;;-1:-1:-1;;;;;;11127:42:32;11124:332;;11263:23;;;;;;21233:2:37;21215:21;;;21272:1;21252:18;;;21245:29;-1:-1:-1;;;21305:2:37;21290:18;;21283:39;21354:2;21339:18;;21031:332;11263:23:32;;;;;;;;;;;;;11253:34;;;;;;11217:12;:30;;;11206:42;;;;;;;;:::i;:::-;;;;;;;;;;;;;11196:53;;;;;;:91;;11185:102;;11124:332;;;11412:30;;;;;11395:48;;;;;;:::i;:::-;;;;;;;;;;;;;11385:59;;;;;;-1:-1:-1;;;;;11329:116:32;;:12;:29;;;-1:-1:-1;;;;;11329:116:32;;;;11318:127;;11124:332;11562:8;11561:9;11540:109;;;;-1:-1:-1;;;11540:109:32;;21570:2:37;11540:109:32;;;21552:21:37;21609:2;21589:18;;;21582:30;21648:34;21628:18;;;21621:62;-1:-1:-1;;;21699:18:37;;;21692:51;21760:19;;11540:109:32;21368:417:37;11540:109:32;11858:1;11756:26;:24;:26::i;:::-;11801:29;;-1:-1:-1;;;;;;11756:75:32;;;;;:44;;;;;:75;;;;;:90;;;-1:-1:-1;;;;;11756:90:32;:104;11735:198;;;;-1:-1:-1;;;11735:198:32;;21992:2:37;11735:198:32;;;21974:21:37;22031:2;22011:18;;;22004:30;22070:34;22050:18;;;22043:62;-1:-1:-1;;;22121:18:37;;;22114:45;22176:19;;11735:198:32;21790:411:37;11735:198:32;11994:26;:24;:26::i;:::-;:37;;12032:14;11994:53;;;;;;:::i;:::-;;;;;;;;;;;;;;;:63;;:82;;;;;;;;-1:-1:-1;11994:82:32;;;;;;;;;;;;;;;;-1:-1:-1;;11994:82:32;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;10867:1216;10754:1329;;:::o;10257:196::-;10437:9;10371:26;:24;:26::i;:::-;-1:-1:-1;;;;;;10371:63:32;;;;;;:44;;;;;:63;;;;;:75;;:63;;:75;;:63;:75;:::i;:::-;-1:-1:-1;10371:75:32;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10371:75:32;;;;;;;;;;;;-1:-1:-1;;;;;;10371:75:32;-1:-1:-1;;;;;10371:75:32;;;;;;;;;-1:-1:-1;;10257:196:32:o;2168:223:21:-;2262:4;2285:38;2312:10;2285:26;:38::i;:::-;:99;;;;-1:-1:-1;2327:8:21;;2349:19;;:34;;;;;2327:57;;-1:-1:-1;;;2327:57:21;;-1:-1:-1;;;;;2584:32:37;;;2327:57:21;;;2566:51:37;2327:8:21;;;:21;;2539:18:37;;2327:57:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;9755:200:32:-;9939:9;9874:26;:24;:26::i;:::-;:37;;9912:14;9874:53;;;;;;:::i;:::-;;;;;;;;;;;;;;:74;;:53;;:74;;:53;:74;:::i;12993:544::-;13092:36;13131:26;:24;:26::i;:::-;:37;;13169:14;13131:53;;;;;;:::i;:::-;;;;;;;;;;;;;:63;;13092:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;13092:102:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13280:26;:24;:26::i;:::-;:37;;13318:14;13280:53;;;;;;:::i;:::-;;;;;;;;;;;;;:63;;;13273:70;;;;:::i;:::-;13358:9;13354:177;13377:9;:16;13373:1;:20;13354:177;;;13463:57;13490:9;13500:1;13490:12;;;;;;;;:::i;:::-;;;;;;;:29;;;13463:26;:57::i;:::-;13395:6;13400:1;13395:6;;:::i;:::-;;;13354:177;;1857:215:21;1947:4;1970:34;1993:10;1970:22;:34::i;15048:348:32:-;15133:4;15255:64;15304:14;15255:26;:24;:26::i;:::-;:41;:48;:64::i;:::-;15247:120;;;;-1:-1:-1;;;15247:120:32;;;;;;;:::i;:::-;-1:-1:-1;15385:4:32;;15048:348;-1:-1:-1;15048:348:32:o;10027:162::-;10120:26;:24;:26::i;:::-;:37;;10158:14;10120:53;;;;;;:::i;:::-;;;;;;;;;;;;;;:62;10113:69;10120:53;:62;10113:69;:::i;2555:133:30:-;2634:4;2657:3;:12;;2670:5;2657:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;:24;;;2555:133;-1:-1:-1;;;2555:133:30:o;14442:511:32:-;14660:19;;:24;14527:4;;14609:76;;:26;:24;:26::i;:76::-;14601:132;;;;-1:-1:-1;;;14601:132:32;;;;;;;:::i;:::-;14813:19;;:34;;;-1:-1:-1;;;;;14813:48:32;14805:119;;;;-1:-1:-1;;;14805:119:32;;24047:2:37;14805:119:32;;;24029:21:37;24086:2;24066:18;;;24059:30;24125:34;24105:18;;;24098:62;24196:28;24176:18;;;24169:56;24242:19;;14805:119:32;23845:422:37;13633:713:32;13810:19;;:24;13804:38;13714:4;;13796:84;;;;-1:-1:-1;;;13796:84:32;;24474:2:37;13796:84:32;;;24456:21:37;24513:2;24493:18;;;24486:30;24552:31;24532:18;;;24525:59;24601:18;;13796:84:32;24272:353:37;13796:84:32;14053:19;;:24;14007:71;;:26;:24;:26::i;:::-;:41;:45;:71::i;:::-;13999:127;;;;-1:-1:-1;;;13999:127:32;;24832:2:37;13999:127:32;;;24814:21:37;24871:2;24851:18;;;24844:30;24910:34;24890:18;;;24883:62;-1:-1:-1;;;24961:18:37;;;24954:41;25012:19;;13999:127:32;24630:407:37;4443:121:30;4515:4;4538:19;4546:3;4551:5;4538:7;:19::i;4160:115::-;4229:4;4252:16;4257:3;4262:5;4252:4;:16::i;1074:1400::-;1146:4;1262:18;1283:3;:12;;1296:5;1283:19;;;;;;:::i;:::-;;;;;;;;;;;;;;1262:40;;1317:10;1331:1;1317:15;1313:1155;;1686:21;1710:14;1723:1;1710:10;:14;:::i;:::-;1758:18;;1686:38;;-1:-1:-1;1738:17:30;;1758:22;;1779:1;;1758:22;:::i;:::-;1738:42;;1812:13;1799:9;:26;1795:404;;1845:23;1871:3;:11;;1883:9;1871:22;;;;;;;;:::i;:::-;;;;;;;;1845:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2022:9;1993:3;:11;;2005:13;1993:26;;;;;;;;:::i;:::-;;;;;;;;:38;;;;;;:::i;:::-;;2131:10;2105:3;:12;;2118:9;2105:23;;;;;;:::i;:::-;;;;;;;;;;;;;;:36;-1:-1:-1;1795:404:30;2277:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;2369:3;:12;;2382:5;2369:19;;;;;;:::i;:::-;;;;;;;;;;;;;2362:26;;;2410:4;2403:11;;;;;;;1313:1155;2452:5;2445:12;;;;;496:410;565:4;586:21;596:3;601:5;586:9;:21::i;:::-;581:319;;623:23;;;;;;;:11;:23;;;;;;;;640:5;623:23;;:::i;:::-;-1:-1:-1;803:18:30;;781:19;;:12;;;;:19;;794:5;;781:19;:::i;:::-;;;;;;;;;;;;;;:40;-1:-1:-1;842:4:30;835:11;;581:319;-1:-1:-1;884:5:30;877:12;;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;375:127:37;436:10;431:3;427:20;424:1;417:31;467:4;464:1;457:15;491:4;488:1;481:15;507:257;579:4;573:11;;;611:17;;-1:-1:-1;;;;;643:34:37;;679:22;;;640:62;637:88;;;705:18;;:::i;:::-;741:4;734:24;507:257;:::o;769:253::-;841:2;835:9;883:4;871:17;;-1:-1:-1;;;;;903:34:37;;939:22;;;900:62;897:88;;;965:18;;:::i;1027:275::-;1098:2;1092:9;1163:2;1144:13;;-1:-1:-1;;1140:27:37;1128:40;;-1:-1:-1;;;;;1183:34:37;;1219:22;;;1180:62;1177:88;;;1245:18;;:::i;:::-;1281:2;1274:22;1027:275;;-1:-1:-1;1027:275:37:o;1307:531::-;1350:5;1403:3;1396:4;1388:6;1384:17;1380:27;1370:55;;1421:1;1418;1411:12;1370:55;1457:6;1444:20;-1:-1:-1;;;;;1479:2:37;1476:26;1473:52;;;1505:18;;:::i;:::-;1549:55;1592:2;1573:13;;-1:-1:-1;;1569:27:37;1598:4;1565:38;1549:55;:::i;:::-;1629:2;1620:7;1613:19;1675:3;1668:4;1663:2;1655:6;1651:15;1647:26;1644:35;1641:55;;;1692:1;1689;1682:12;1641:55;1757:2;1750:4;1742:6;1738:17;1731:4;1722:7;1718:18;1705:55;1805:1;1780:16;;;1798:4;1776:27;1769:38;;;;1784:7;1307:531;-1:-1:-1;;;1307:531:37:o;1843:173::-;1910:20;;-1:-1:-1;;;;;;1959:32:37;;1949:43;;1939:71;;2006:1;2003;1996:12;1939:71;1843:173;;;:::o;2021:394::-;2098:6;2106;2159:2;2147:9;2138:7;2134:23;2130:32;2127:52;;;2175:1;2172;2165:12;2127:52;2215:9;2202:23;-1:-1:-1;;;;;2240:6:37;2237:30;2234:50;;;2280:1;2277;2270:12;2234:50;2303;2345:7;2336:6;2325:9;2321:22;2303:50;:::i;:::-;2293:60;;;2372:37;2405:2;2394:9;2390:18;2372:37;:::i;:::-;2362:47;;2021:394;;;;;:::o;2628:250::-;2713:1;2723:113;2737:6;2734:1;2731:13;2723:113;;;2813:11;;;2807:18;2794:11;;;2787:39;2759:2;2752:10;2723:113;;;-1:-1:-1;;2870:1:37;2852:16;;2845:27;2628:250::o;2883:271::-;2925:3;2963:5;2957:12;2990:6;2985:3;2978:19;3006:76;3075:6;3068:4;3063:3;3059:14;3052:4;3045:5;3041:16;3006:76;:::i;:::-;3136:2;3115:15;-1:-1:-1;;3111:29:37;3102:39;;;;3143:4;3098:50;;2883:271;-1:-1:-1;;2883:271:37:o;3159:477::-;3219:3;3263:5;3257:12;3290:4;3285:3;3278:17;3316:47;3357:4;3352:3;3348:14;3334:12;3316:47;:::i;:::-;3304:59;;3411:4;3404:5;3400:16;3394:23;3459:3;3453:4;3449:14;3442:4;3437:3;3433:14;3426:38;3487:39;3521:4;3505:14;3487:39;:::i;:::-;3579:4;3568:16;;;3562:23;-1:-1:-1;;;;;3558:49:37;3542:14;;;;3535:73;;;;-1:-1:-1;3473:53:37;;3159:477;-1:-1:-1;;3159:477:37:o;3641:288::-;3758:10;3753:3;3749:20;3741:5;3735:12;3731:39;3726:3;3719:52;3701:3;3817:4;3810:5;3806:16;3800:23;3855:4;3848;3843:3;3839:14;3832:28;3876:47;3917:4;3912:3;3908:14;3894:12;3876:47;:::i;:::-;3869:54;3641:288;-1:-1:-1;;;;3641:288:37:o;3934:897::-;3986:3;4030:5;4024:12;4057:4;4052:3;4045:17;4083:65;4142:4;4137:3;4133:14;4119:12;4083:65;:::i;:::-;4071:77;;4167:4;4219:2;4212:5;4208:14;4202:21;4263:3;4257:4;4253:14;4248:2;4243:3;4239:12;4232:36;4290:4;4323:14;4317:21;4360:6;4354:4;4347:20;4395:2;4389:4;4385:13;4376:22;;4452:2;4442:6;4439:1;4435:14;4429:4;4425:25;4421:34;4498:2;4482:14;4478:23;4464:37;;4519:1;4529:274;4543:6;4540:1;4537:13;4529:274;;;4633:2;4629:7;4622:4;4614:6;4610:17;4606:31;4599:5;4592:46;4661:58;4712:6;4703;4697:13;4661:58;:::i;:::-;4742:15;;;;4779:14;;;;4651:68;-1:-1:-1;4565:1:37;4558:9;4529:274;;;-1:-1:-1;4819:6:37;3934:897;-1:-1:-1;;;;;;;;3934:897:37:o;4836:849::-;5034:4;5063:2;5103;5092:9;5088:18;5133:2;5122:9;5115:21;5156:6;5191;5185:13;5222:6;5214;5207:22;5260:2;5249:9;5245:18;5238:25;;5322:2;5312:6;5309:1;5305:14;5294:9;5290:30;5286:39;5272:53;;5360:2;5352:6;5348:15;5381:1;5391:265;5405:6;5402:1;5399:13;5391:265;;;5498:2;5494:7;5482:9;5474:6;5470:22;5466:36;5461:3;5454:49;5526:50;5569:6;5560;5554:13;5526:50;:::i;:::-;5516:60;-1:-1:-1;5634:12:37;;;;5599:15;;;;5427:1;5420:9;5391:265;;;-1:-1:-1;5673:6:37;;4836:849;-1:-1:-1;;;;;;;4836:849:37:o;5690:173::-;5758:20;;-1:-1:-1;;;;;5807:31:37;;5797:42;;5787:70;;5853:1;5850;5843:12;5868:186;5927:6;5980:2;5968:9;5959:7;5955:23;5951:32;5948:52;;;5996:1;5993;5986:12;5948:52;6019:29;6038:9;6019:29;:::i;6294:425::-;6358:5;6406:4;6394:9;6389:3;6385:19;6381:30;6378:50;;;6424:1;6421;6414:12;6378:50;6446:22;;:::i;:::-;6437:31;;6491:28;6509:9;6491:28;:::i;:::-;6484:5;6477:43;6571:2;6560:9;6556:18;6543:32;-1:-1:-1;;;;;6590:6:37;6587:30;6584:50;;;6630:1;6627;6620:12;6584:50;6666:46;6708:3;6699:6;6688:9;6684:22;6666:46;:::i;:::-;6661:2;6654:5;6650:14;6643:70;;6294:425;;;;:::o;6724:587::-;6838:6;6846;6899:2;6887:9;6878:7;6874:23;6870:32;6867:52;;;6915:1;6912;6905:12;6867:52;6955:9;6942:23;-1:-1:-1;;;;;7025:2:37;7017:6;7014:14;7011:34;;;7041:1;7038;7031:12;7011:34;7064:50;7106:7;7097:6;7086:9;7082:22;7064:50;:::i;:::-;7054:60;;7167:2;7156:9;7152:18;7139:32;7123:48;;7196:2;7186:8;7183:16;7180:36;;;7212:1;7209;7202:12;7180:36;;7235:70;7297:7;7286:8;7275:9;7271:24;7235:70;:::i;:::-;7225:80;;;6724:587;;;;;:::o;7316:184::-;7374:6;7427:2;7415:9;7406:7;7402:23;7398:32;7395:52;;;7443:1;7440;7433:12;7395:52;7466:28;7484:9;7466:28;:::i;7505:290::-;7706:2;7695:9;7688:21;7669:4;7726:63;7785:2;7774:9;7770:18;7762:6;7726:63;:::i;7800:979::-;7871:5;7924:3;7917:4;7909:6;7905:17;7901:27;7891:55;;7942:1;7939;7932:12;7891:55;7978:6;7965:20;8004:4;-1:-1:-1;;;;;8064:2:37;8060;8057:10;8054:36;;;8070:18;;:::i;:::-;8116:2;8113:1;8109:10;8139:28;8163:2;8159;8155:11;8139:28;:::i;:::-;8201:15;;;8271;;;8267:24;;;8232:12;;;;8303:15;;;8300:35;;;8331:1;8328;8321:12;8300:35;8367:2;8359:6;8355:15;8344:26;;8379:371;8395:6;8390:3;8387:15;8379:371;;;8481:3;8468:17;8517:2;8504:11;8501:19;8498:109;;;8561:1;8590:2;8586;8579:14;8498:109;8632:75;8703:3;8698:2;8684:11;8676:6;8672:24;8668:33;8632:75;:::i;:::-;8620:88;;-1:-1:-1;8412:12:37;;;;8728;;;;8379:371;;;8768:5;7800:979;-1:-1:-1;;;;;;;;7800:979:37:o;8784:1315::-;8871:6;8924:2;8912:9;8903:7;8899:23;8895:32;8892:52;;;8940:1;8937;8930:12;8892:52;8980:9;8967:23;-1:-1:-1;;;;;9050:2:37;9042:6;9039:14;9036:34;;;9066:1;9063;9056:12;9036:34;9089:22;;;;9145:4;9127:16;;;9123:27;9120:47;;;9163:1;9160;9153:12;9120:47;9189:22;;:::i;:::-;9249:2;9236:16;9277:2;9267:8;9264:16;9261:36;;;9293:1;9290;9283:12;9261:36;9316:17;;9367:4;9349:16;;;9345:27;9342:47;;;9385:1;9382;9375:12;9342:47;9413:22;;:::i;:::-;9473:2;9460:16;9501:2;9491:8;9488:16;9485:36;;;9517:1;9514;9507:12;9485:36;9546:45;9583:7;9572:8;9568:2;9564:17;9546:45;:::i;:::-;9537:7;9530:62;;9638:2;9634;9630:11;9617:25;9667:2;9657:8;9654:16;9651:36;;;9683:1;9680;9673:12;9651:36;9721:45;9758:7;9747:8;9743:2;9739:17;9721:45;:::i;:::-;9716:2;9707:7;9703:16;9696:71;;9803:33;9830:4;9826:2;9822:13;9803:33;:::i;:::-;9796:4;9783:18;;9776:61;9846:22;;-1:-1:-1;9914:2:37;9906:11;;9893:25;9930:16;;;9927:36;;;9959:1;9956;9949:12;9927:36;9995:73;10060:7;10049:8;10045:2;10041:17;9995:73;:::i;:::-;9990:2;9979:14;;9972:97;-1:-1:-1;9983:5:37;8784:1315;-1:-1:-1;;;;;8784:1315:37:o;10104:322::-;10173:6;10226:2;10214:9;10205:7;10201:23;10197:32;10194:52;;;10242:1;10239;10232:12;10194:52;10282:9;10269:23;-1:-1:-1;;;;;10307:6:37;10304:30;10301:50;;;10347:1;10344;10337:12;10301:50;10370;10412:7;10403:6;10392:9;10388:22;10370:50;:::i;10431:266::-;10616:2;10605:9;10598:21;10579:4;10636:55;10687:2;10676:9;10672:18;10664:6;10636:55;:::i;10702:355::-;10904:2;10886:21;;;10943:2;10923:18;;;10916:30;10982:33;10977:2;10962:18;;10955:61;11048:2;11033:18;;10702:355::o;11487:380::-;11566:1;11562:12;;;;11609;;;11630:61;;11684:4;11676:6;11672:17;11662:27;;11630:61;11737:2;11729:6;11726:14;11706:18;11703:38;11700:161;;11783:10;11778:3;11774:20;11771:1;11764:31;11818:4;11815:1;11808:15;11846:4;11843:1;11836:15;11872:289;12003:3;12041:6;12035:13;12057:66;12116:6;12111:3;12104:4;12096:6;12092:17;12057:66;:::i;:::-;12139:16;;;;;11872:289;-1:-1:-1;;11872:289:37:o;12166:127::-;12227:10;12222:3;12218:20;12215:1;12208:31;12258:4;12255:1;12248:15;12282:4;12279:1;12272:15;12298:127;12359:10;12354:3;12350:20;12347:1;12340:31;12390:4;12387:1;12380:15;12414:4;12411:1;12404:15;12430:125;12495:9;;;12516:10;;;12513:36;;;12529:18;;:::i;12978:427::-;13238:1;13233:3;13226:14;13208:3;13269:6;13263:13;13285:74;13352:6;13348:1;13343:3;13339:11;13332:4;13324:6;13320:17;13285:74;:::i;:::-;13379:16;;;;13397:1;13375:24;;12978:427;-1:-1:-1;;12978:427:37:o;13410:691::-;-1:-1:-1;;;13785:16:37;;13856:3;13834:16;;;-1:-1:-1;;;;;;13830:43:37;13826:1;13817:11;;13810:64;-1:-1:-1;;;13899:1:37;13890:11;;13883:51;13957:13;;-1:-1:-1;;13979:75:37;13957:13;14042:2;14033:12;;14026:4;14014:17;;13979:75;:::i;:::-;14074:16;;;;14092:2;14070:25;;13410:691;-1:-1:-1;;;13410:691:37:o;14106:128::-;14173:9;;;14194:11;;;14191:37;;;14208:18;;:::i;14421:407::-;14623:2;14605:21;;;14662:2;14642:18;;;14635:30;14701:34;14696:2;14681:18;;14674:62;-1:-1:-1;;;14767:2:37;14752:18;;14745:41;14818:3;14803:19;;14421:407::o;14833:220::-;14982:2;14971:9;14964:21;14945:4;15002:45;15043:2;15032:9;15028:18;15020:6;15002:45;:::i;15184:963::-;15293:4;15322:2;15351;15340:9;15333:21;15374:1;15407:6;15401:13;15437:36;15463:9;15437:36;:::i;:::-;15509:6;15504:2;15493:9;15489:18;15482:34;15535:2;15556:1;15588:2;15577:9;15573:18;15605:1;15600:158;;;;15772:1;15767:354;;;;15566:555;;15600:158;-1:-1:-1;;15648:24:37;;15628:18;;;15621:52;15726:14;;15719:22;15716:1;15712:30;15697:46;;15693:55;;;-1:-1:-1;15600:158:37;;15767:354;15798:6;15795:1;15788:17;15846:2;15843:1;15833:16;15871:1;15885:180;15899:6;15896:1;15893:13;15885:180;;;15992:14;;15968:17;;;15964:26;;15957:50;16035:16;;;;15914:10;;15885:180;;;16089:17;;16085:26;;;-1:-1:-1;;15566:555:37;-1:-1:-1;16138:3:37;;15184:963;-1:-1:-1;;;;;;;;15184:963:37:o;16559:545::-;16661:2;16656:3;16653:11;16650:448;;;16697:1;16722:5;16718:2;16711:17;16767:4;16763:2;16753:19;16837:2;16825:10;16821:19;16818:1;16814:27;16808:4;16804:38;16873:4;16861:10;16858:20;16855:47;;;-1:-1:-1;16896:4:37;16855:47;16951:2;16946:3;16942:12;16939:1;16935:20;16929:4;16925:31;16915:41;;17006:82;17024:2;17017:5;17014:13;17006:82;;;17069:17;;;17050:1;17039:13;17006:82;;17280:1431;17395:3;17389:4;17386:13;17383:26;;17402:5;;17280:1431::o;17383:26::-;17432:37;17464:3;17458:10;17432:37;:::i;:::-;-1:-1:-1;;;;;17484:6:37;17481:30;17478:56;;;17514:18;;:::i;:::-;17543:97;17633:6;17593:38;17625:4;17619:11;17593:38;:::i;:::-;17587:4;17543:97;:::i;:::-;17666:1;17694:2;17686:6;17683:14;17711:1;17706:748;;;;18498:1;18515:6;18512:89;;;-1:-1:-1;18567:19:37;;;18561:26;18512:89;-1:-1:-1;;17237:1:37;17233:11;;;17229:24;17225:29;17215:40;17261:1;17257:11;;;17212:57;18614:81;;17676:1029;;17706:748;15131:1;15124:14;;;15168:4;15155:18;;-1:-1:-1;;17742:20:37;;;15131:1;15124:14;;;15168:4;15155:18;;17906:9;17928:251;17942:7;17939:1;17936:14;17928:251;;;18024:21;;;18018:28;18003:44;;18074:1;18147:18;;;;18102:15;;;;17965:4;17958:12;17928:251;;;17932:3;18207:6;18198:7;18195:19;18192:203;;;18268:21;;;18262:28;-1:-1:-1;;18353:1:37;18349:14;;;18365:3;18345:24;18341:37;18337:42;18322:58;18307:74;;18192:203;-1:-1:-1;;;;;18441:1:37;18425:14;;;18421:22;18408:36;;-1:-1:-1;17280:1431:37:o;18716:127::-;18777:10;18772:3;18768:20;18765:1;18758:31;18808:4;18805:1;18798:15;18832:4;18829:1;18822:15;19272:523;19573:2;19562:9;19555:21;19536:4;19599:63;19658:2;19647:9;19643:18;19635:6;19599:63;:::i;:::-;19710:9;19702:6;19698:22;19693:2;19682:9;19678:18;19671:50;19738:51;19782:6;19774;19738:51;:::i;:::-;19730:59;19272:523;-1:-1:-1;;;;;19272:523:37:o;22206:1352::-;22332:3;22326:10;-1:-1:-1;;;;;22351:6:37;22348:30;22345:56;;;22381:18;;:::i;:::-;22410:97;22500:6;22460:38;22492:4;22486:11;22460:38;:::i;22410:97::-;22562:4;;22626:2;22615:14;;22643:1;22638:663;;;;23345:1;23362:6;23359:89;;;-1:-1:-1;23414:19:37;;;23408:26;23359:89;-1:-1:-1;;17237:1:37;17233:11;;;17229:24;17225:29;17215:40;17261:1;17257:11;;;17212:57;23461:81;;22608:944;;22638:663;15131:1;15124:14;;;15168:4;15155:18;;-1:-1:-1;;22674:20:37;;;22792:236;22806:7;22803:1;22800:14;22792:236;;;22895:19;;;22889:26;22874:42;;22987:27;;;;22955:1;22943:14;;;;22822:19;;22792:236;;;22796:3;23056:6;23047:7;23044:19;23041:201;;;23117:19;;;;23111:26;-1:-1:-1;;23212:3:37;23200:1;23196:14;;;23192:24;23188:37;23184:42;23169:58;23154:74;;;-1:-1:-1;;23288:1:37;23272:14;;;23268:22;23255:36;;-1:-1:-1;22206:1352:37:o;23563:277::-;23630:6;23683:2;23671:9;23662:7;23658:23;23654:32;23651:52;;;23699:1;23696;23689:12;23651:52;23731:9;23725:16;23784:5;23777:13;23770:21;23763:5;23760:32;23750:60;;23806:1;23803;23796:12",
    "linkReferences": {},
    "immutableReferences": {
      "29481": [
        {
          "start": 398,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "_disableFunctionInExtension(string,bytes4)": "429eed80",
    "addExtension(((string,string,address),(bytes4,string)[]))": "e05688fe",
    "admin()": "f851a440",
    "defaultExtensions()": "463c4864",
    "disableFunctionInExtension(string,bytes4)": "512cf914",
    "enableFunctionInExtension(string,(bytes4,string))": "8856a113",
    "getAllExtensions()": "4a00cc48",
    "getExtension(string)": "c22707ee",
    "getImplementationForFunction(bytes4)": "ce0b6013",
    "getMetadataForFunction(bytes4)": "a0dbaefd",
    "registry()": "7b103999",
    "removeExtension(string)": "ee7d2adf",
    "replaceExtension(((string,string,address),(bytes4,string)[]))": "c0562f6d",
    "setAdmin(address)": "704b6c02"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WriteError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct IExtension.ExtensionMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"},{\"internalType\":\"string\",\"name\":\"functionSignature\",\"type\":\"string\"}],\"internalType\":\"struct IExtension.ExtensionFunction[]\",\"name\":\"functions\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct IExtension.Extension\",\"name\":\"extension\",\"type\":\"tuple\"}],\"name\":\"ExtensionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct IExtension.ExtensionMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"},{\"internalType\":\"string\",\"name\":\"functionSignature\",\"type\":\"string\"}],\"internalType\":\"struct IExtension.ExtensionFunction[]\",\"name\":\"functions\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct IExtension.Extension\",\"name\":\"extension\",\"type\":\"tuple\"}],\"name\":\"ExtensionRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct IExtension.ExtensionMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"},{\"internalType\":\"string\",\"name\":\"functionSignature\",\"type\":\"string\"}],\"internalType\":\"struct IExtension.ExtensionFunction[]\",\"name\":\"functions\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct IExtension.Extension\",\"name\":\"extension\",\"type\":\"tuple\"}],\"name\":\"ExtensionReplaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IExtension.ExtensionMetadata\",\"name\":\"extMetadata\",\"type\":\"tuple\"}],\"name\":\"FunctionDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"},{\"internalType\":\"string\",\"name\":\"functionSignature\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IExtension.ExtensionFunction\",\"name\":\"extFunction\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IExtension.ExtensionMetadata\",\"name\":\"extMetadata\",\"type\":\"tuple\"}],\"name\":\"FunctionEnabled\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_extensionName\",\"type\":\"string\"},{\"internalType\":\"bytes4\",\"name\":\"_functionSelector\",\"type\":\"bytes4\"}],\"name\":\"_disableFunctionInExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct IExtension.ExtensionMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"},{\"internalType\":\"string\",\"name\":\"functionSignature\",\"type\":\"string\"}],\"internalType\":\"struct IExtension.ExtensionFunction[]\",\"name\":\"functions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IExtension.Extension\",\"name\":\"_extension\",\"type\":\"tuple\"}],\"name\":\"addExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultExtensions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_extensionName\",\"type\":\"string\"},{\"internalType\":\"bytes4\",\"name\":\"_functionSelector\",\"type\":\"bytes4\"}],\"name\":\"disableFunctionInExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_extensionName\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"},{\"internalType\":\"string\",\"name\":\"functionSignature\",\"type\":\"string\"}],\"internalType\":\"struct IExtension.ExtensionFunction\",\"name\":\"_function\",\"type\":\"tuple\"}],\"name\":\"enableFunctionInExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllExtensions\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct IExtension.ExtensionMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"},{\"internalType\":\"string\",\"name\":\"functionSignature\",\"type\":\"string\"}],\"internalType\":\"struct IExtension.ExtensionFunction[]\",\"name\":\"functions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IExtension.Extension[]\",\"name\":\"allExtensions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"extensionName\",\"type\":\"string\"}],\"name\":\"getExtension\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct IExtension.ExtensionMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"},{\"internalType\":\"string\",\"name\":\"functionSignature\",\"type\":\"string\"}],\"internalType\":\"struct IExtension.ExtensionFunction[]\",\"name\":\"functions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IExtension.Extension\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_functionSelector\",\"type\":\"bytes4\"}],\"name\":\"getImplementationForFunction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"name\":\"getMetadataForFunction\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct IExtension.ExtensionMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract ExtensionRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_extensionName\",\"type\":\"string\"}],\"name\":\"removeExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct IExtension.ExtensionMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"},{\"internalType\":\"string\",\"name\":\"functionSignature\",\"type\":\"string\"}],\"internalType\":\"struct IExtension.ExtensionFunction[]\",\"name\":\"functions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IExtension.Extension\",\"name\":\"_extension\",\"type\":\"tuple\"}],\"name\":\"replaceExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"_disableFunctionInExtension(string,bytes4)\":{\"details\":\"Disables a single function in an Extension.\"},\"addExtension(((string,string,address),(bytes4,string)[]))\":{\"params\":{\"_extension\":\"The extension to add.\"}},\"constructor\":{\"details\":\"Cannot initialize with extensions before registry is set, so we pass empty array to base constructor.\"},\"disableFunctionInExtension(string,bytes4)\":{\"params\":{\"_extensionName\":\"The name of the extension to which the function of `functionSelector` belongs.\",\"_functionSelector\":\"The function to disable.\"}},\"enableFunctionInExtension(string,(bytes4,string))\":{\"details\":\"Makes the given function callable on the router.\",\"params\":{\"_extensionName\":\"The name of the extension to which `extFunction` belongs.\",\"_function\":\"The function to enable.\"}},\"getAllExtensions()\":{\"returns\":{\"allExtensions\":\"An array of all extensions.\"}},\"getExtension(string)\":{\"params\":{\"extensionName\":\"The name of the extension to get the metadata and functions for.\"},\"returns\":{\"_0\":\"extension The extension metadata and functions for a given extension.\"}},\"getMetadataForFunction(bytes4)\":{\"params\":{\"functionSelector\":\"The function selector to get the extension metadata for.\"},\"returns\":{\"_0\":\"metadata The extension metadata for a given function.\"}},\"removeExtension(string)\":{\"params\":{\"_extensionName\":\"The name of the extension to remove.\"}},\"replaceExtension(((string,string,address),(bytes4,string)[]))\":{\"details\":\"The extension with name `extension.name` is the extension being replaced.\",\"params\":{\"_extension\":\"The extension to replace or overwrite.\"}},\"setAdmin(address)\":{\"details\":\"Sets the admin address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addExtension(((string,string,address),(bytes4,string)[]))\":{\"notice\":\"Add a new extension to the router.\"},\"defaultExtensions()\":{\"notice\":\"The address where the router's default extension set is stored.\"},\"disableFunctionInExtension(string,bytes4)\":{\"notice\":\"Disables a single function in an Extension.\"},\"enableFunctionInExtension(string,(bytes4,string))\":{\"notice\":\"Enables a single function in an existing extension.\"},\"getAllExtensions()\":{\"notice\":\"Returns all extensions of the Router.\"},\"getExtension(string)\":{\"notice\":\"Returns the extension metadata and functions for a given extension.\"},\"getImplementationForFunction(bytes4)\":{\"notice\":\"Returns the implementation contract address for a given function signature.\"},\"getMetadataForFunction(bytes4)\":{\"notice\":\"Returns the extension metadata for a given function.\"},\"removeExtension(string)\":{\"notice\":\"Remove an existing extension from the router.\"},\"replaceExtension(((string,string,address),(bytes4,string)[]))\":{\"notice\":\"Fully replace an existing extension of the router.\"}},\"notice\":\"This smart contract is an EXAMPLE, and is not meant for use in production.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/example/RouterRegistryConstrained.sol\":\"RouterRegistryConstrained\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":sstore2/=lib/sstore2/contracts/\"]},\"sources\":{\"lib/sstore2/contracts/SSTORE2.sol\":{\"keccak256\":\"0x79e6f5c7bb6b22d142ad0ec37e00930cdbef28ab405214f7c0f94cbd58255383\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc67d6b9ff44cd2dc7ac3b1430a8a15c3eb1b00be941b8deac20eb42077917a8\",\"dweb:/ipfs/QmVwJ65VVakiNeS2VyRFKQueL1cibfwjmLeQpgLi9BWZ1K\"]},\"lib/sstore2/contracts/utils/Bytecode.sol\":{\"keccak256\":\"0x40ef4ee5697507566574eda36358a76b523b3dfe7cb65da1630004fe6c5a7a45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95059c34a2fe249bede85fb523ff53eddf61e45fe76436201237f2eae73bc14c\",\"dweb:/ipfs/QmT6qbZsBzUS6Mpc9yAmhourUFC8TNpaF6vzxysyAKEcpN\"]},\"src/core/Router.sol\":{\"keccak256\":\"0x0b8e78a723ff6c6e966cc69ec9f61cec3667819a558b71069739b156098a0fd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcb544b837505f52feb13fab8d0d3bf7544ed217d7c8f418d8a40f9b49c16b94\",\"dweb:/ipfs/Qma6uuc5kMcTxPW7LpNi1wXMtyVrnQ5iEZjiJ5RMFRGYrj\"]},\"src/example/RouterRegistryConstrained.sol\":{\"keccak256\":\"0xb2ef0f72ceb52a04c5d73395fe1cf203aeec4d849b9e6a8e60398fae3c36efa7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09e144c0b617edabe70af5d7353588f3b21590ae273d2bc486ab9028da5f8333\",\"dweb:/ipfs/QmcKtWxQ76VSBJMbRCbyEqo4GFBNSjiLc6Xg7yPTgpfRoK\"]},\"src/interface/IExtension.sol\":{\"keccak256\":\"0x22181c67dd7ec821697d7dfabe778d9ae85dc784aabcbc85e2dd8cc97789939e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0802dbefa09c672978b95115083da519484bce42c9a7d0ebe756606a7f08ac7b\",\"dweb:/ipfs/QmRsyrkkmR7dTyhY8cF3M389V5eip24Y5gN3X8ok4W8z8M\"]},\"src/interface/IExtensionManager.sol\":{\"keccak256\":\"0xa728f4254f5feeb38d91f5d5b4d3d88d0d129b9cc66c2abd0a02a54fb790bd29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78a28da28ae60859d5d9e88bab7bccdb46d0ae7bcc170b0741de8aae7024d2f5\",\"dweb:/ipfs/QmbUDiD3WQzm5x54HW1YqyEp5fLMt1UAdf8wHrcqDoKHiZ\"]},\"src/interface/IRouter.sol\":{\"keccak256\":\"0xda007810e0416a45e3e6bbaa6c9977029e4e7cccb0c45e324b2dfbda900ee0bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2c7a80cad255c4f6928391272209d724a9d044801bca1b873bbf998363e0c55\",\"dweb:/ipfs/Qme9cCYBPw28uLq3N688jAS6jAV8yVhhBCXNgxMQeHeDxJ\"]},\"src/interface/IRouterState.sol\":{\"keccak256\":\"0x675677235369c260e7b867d14e33fda5806320803061ea90d1e0441be5cc3d04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad3a3a31d042d10d9a5860fdac76a78ac3538d2fc59ae96551b24f28490026e9\",\"dweb:/ipfs/QmTGSS1HR3yLUSQJfGF5tZYCzvpz1HweZWWm3NNVuv4x7M\"]},\"src/interface/IRouterStateGetters.sol\":{\"keccak256\":\"0x4d1d6f562583d102a2cbc4c86500aea7e7c2c07e022ceb42c01f10b6144d28a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5a3ebb605ba72213781ce143ea39517a2bcafe81516cfeeaa3c383f8cba8099\",\"dweb:/ipfs/QmSFTMTHVGVN6u6wn7iDFKjf8afpK3tPgMXEFyQRmo3R5o\"]},\"src/lib/BaseRouterStorage.sol\":{\"keccak256\":\"0x08a812f419f3b33e7c9f5e15667f9e7a0586e9282353cbb09068689a003dbbc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5709a425a0c07f833e416bf6c96184cabf3f414d275f0f76105bca38ace84fd\",\"dweb:/ipfs/QmahKaYfWwefaPcJZzmy1BLkCcqiNPg6dpMrFRhb2UoqRB\"]},\"src/lib/ExtensionManagerStorage.sol\":{\"keccak256\":\"0x9680ed59ae74b26255d88691a48486baa539410deb045127ee7f40c9b23a8abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a23b0f5b4e263b62bb8755fb033d2eca374022cf2cadc496516086106cf76b3\",\"dweb:/ipfs/QmRYNz6GcqnMkxYo62ZSmThNKNatgDFU1vMkT2aAP7iuCa\"]},\"src/lib/StringSet.sol\":{\"keccak256\":\"0x3cfe09c207edb70d6aec054f80ba6559a01bb17f95796765b9a98cc59e7ffafc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43383086cbc953cb6fbd18e677f13e72c83081c095611c0608d7a66f55071ff3\",\"dweb:/ipfs/QmfMxmNAhPZZgsopXDXJ5PviMpcahsvYoiN3GEkLnaXiDf\"]},\"src/presets/BaseRouter.sol\":{\"keccak256\":\"0x95ea34cf3972fbcb981ad98aca3c31c18f62daa48dfd744574883f2030008fa9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://338a4f606afcc1b085def5ec58af412f985495592af7a1449b9e4c2e17cc36cb\",\"dweb:/ipfs/QmXpCuZDHE5WnSuoipDiDZVycwPE917ZsLB15zDxhtJdtC\"]},\"src/presets/ExtensionManager.sol\":{\"keccak256\":\"0x87f5cf4c680c83d6da817bb00f9adc4aaf0f479ca06622459789a91b9668ee18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25a785d81a053b0f1b0e6235487f7102c7ecd7d4eeaee4a75b2f7afa2261b7a7\",\"dweb:/ipfs/QmSD8RMbwE7T8ghFLrF5WPwsMgfxJHz7bTUwrknovLKc3w\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_registry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WriteError"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IExtension.Extension",
              "name": "extension",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IExtension.ExtensionMetadata",
                  "name": "metadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "metadataURI",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "implementation",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IExtension.ExtensionFunction[]",
                  "name": "functions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes4",
                      "name": "functionSelector",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "string",
                      "name": "functionSignature",
                      "type": "string"
                    }
                  ]
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExtensionAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "struct IExtension.Extension",
              "name": "extension",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IExtension.ExtensionMetadata",
                  "name": "metadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "metadataURI",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "implementation",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IExtension.ExtensionFunction[]",
                  "name": "functions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes4",
                      "name": "functionSelector",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "string",
                      "name": "functionSignature",
                      "type": "string"
                    }
                  ]
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExtensionRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IExtension.Extension",
              "name": "extension",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IExtension.ExtensionMetadata",
                  "name": "metadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "metadataURI",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "implementation",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IExtension.ExtensionFunction[]",
                  "name": "functions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes4",
                      "name": "functionSelector",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "string",
                      "name": "functionSignature",
                      "type": "string"
                    }
                  ]
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExtensionReplaced",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "bytes4",
              "name": "functionSelector",
              "type": "bytes4",
              "indexed": true
            },
            {
              "internalType": "struct IExtension.ExtensionMetadata",
              "name": "extMetadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "metadataURI",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FunctionDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "bytes4",
              "name": "functionSelector",
              "type": "bytes4",
              "indexed": true
            },
            {
              "internalType": "struct IExtension.ExtensionFunction",
              "name": "extFunction",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "functionSelector",
                  "type": "bytes4"
                },
                {
                  "internalType": "string",
                  "name": "functionSignature",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "struct IExtension.ExtensionMetadata",
              "name": "extMetadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "metadataURI",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FunctionEnabled",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_extensionName",
              "type": "string"
            },
            {
              "internalType": "bytes4",
              "name": "_functionSelector",
              "type": "bytes4"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_disableFunctionInExtension"
        },
        {
          "inputs": [
            {
              "internalType": "struct IExtension.Extension",
              "name": "_extension",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IExtension.ExtensionMetadata",
                  "name": "metadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "metadataURI",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "implementation",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IExtension.ExtensionFunction[]",
                  "name": "functions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes4",
                      "name": "functionSelector",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "string",
                      "name": "functionSignature",
                      "type": "string"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addExtension"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultExtensions",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_extensionName",
              "type": "string"
            },
            {
              "internalType": "bytes4",
              "name": "_functionSelector",
              "type": "bytes4"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableFunctionInExtension"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_extensionName",
              "type": "string"
            },
            {
              "internalType": "struct IExtension.ExtensionFunction",
              "name": "_function",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes4",
                  "name": "functionSelector",
                  "type": "bytes4"
                },
                {
                  "internalType": "string",
                  "name": "functionSignature",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableFunctionInExtension"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllExtensions",
          "outputs": [
            {
              "internalType": "struct IExtension.Extension[]",
              "name": "allExtensions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct IExtension.ExtensionMetadata",
                  "name": "metadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "metadataURI",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "implementation",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IExtension.ExtensionFunction[]",
                  "name": "functions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes4",
                      "name": "functionSelector",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "string",
                      "name": "functionSignature",
                      "type": "string"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "extensionName",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getExtension",
          "outputs": [
            {
              "internalType": "struct IExtension.Extension",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IExtension.ExtensionMetadata",
                  "name": "metadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "metadataURI",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "implementation",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IExtension.ExtensionFunction[]",
                  "name": "functions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes4",
                      "name": "functionSelector",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "string",
                      "name": "functionSignature",
                      "type": "string"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_functionSelector",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getImplementationForFunction",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "functionSelector",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMetadataForFunction",
          "outputs": [
            {
              "internalType": "struct IExtension.ExtensionMetadata",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "metadataURI",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "registry",
          "outputs": [
            {
              "internalType": "contract ExtensionRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_extensionName",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeExtension"
        },
        {
          "inputs": [
            {
              "internalType": "struct IExtension.Extension",
              "name": "_extension",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IExtension.ExtensionMetadata",
                  "name": "metadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "metadataURI",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "implementation",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IExtension.ExtensionFunction[]",
                  "name": "functions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes4",
                      "name": "functionSelector",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "string",
                      "name": "functionSignature",
                      "type": "string"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "replaceExtension"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdmin"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "_disableFunctionInExtension(string,bytes4)": {
            "details": "Disables a single function in an Extension."
          },
          "addExtension(((string,string,address),(bytes4,string)[]))": {
            "params": {
              "_extension": "The extension to add."
            }
          },
          "constructor": {
            "details": "Cannot initialize with extensions before registry is set, so we pass empty array to base constructor."
          },
          "disableFunctionInExtension(string,bytes4)": {
            "params": {
              "_extensionName": "The name of the extension to which the function of `functionSelector` belongs.",
              "_functionSelector": "The function to disable."
            }
          },
          "enableFunctionInExtension(string,(bytes4,string))": {
            "details": "Makes the given function callable on the router.",
            "params": {
              "_extensionName": "The name of the extension to which `extFunction` belongs.",
              "_function": "The function to enable."
            }
          },
          "getAllExtensions()": {
            "returns": {
              "allExtensions": "An array of all extensions."
            }
          },
          "getExtension(string)": {
            "params": {
              "extensionName": "The name of the extension to get the metadata and functions for."
            },
            "returns": {
              "_0": "extension The extension metadata and functions for a given extension."
            }
          },
          "getMetadataForFunction(bytes4)": {
            "params": {
              "functionSelector": "The function selector to get the extension metadata for."
            },
            "returns": {
              "_0": "metadata The extension metadata for a given function."
            }
          },
          "removeExtension(string)": {
            "params": {
              "_extensionName": "The name of the extension to remove."
            }
          },
          "replaceExtension(((string,string,address),(bytes4,string)[]))": {
            "details": "The extension with name `extension.name` is the extension being replaced.",
            "params": {
              "_extension": "The extension to replace or overwrite."
            }
          },
          "setAdmin(address)": {
            "details": "Sets the admin address."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addExtension(((string,string,address),(bytes4,string)[]))": {
            "notice": "Add a new extension to the router."
          },
          "defaultExtensions()": {
            "notice": "The address where the router's default extension set is stored."
          },
          "disableFunctionInExtension(string,bytes4)": {
            "notice": "Disables a single function in an Extension."
          },
          "enableFunctionInExtension(string,(bytes4,string))": {
            "notice": "Enables a single function in an existing extension."
          },
          "getAllExtensions()": {
            "notice": "Returns all extensions of the Router."
          },
          "getExtension(string)": {
            "notice": "Returns the extension metadata and functions for a given extension."
          },
          "getImplementationForFunction(bytes4)": {
            "notice": "Returns the implementation contract address for a given function signature."
          },
          "getMetadataForFunction(bytes4)": {
            "notice": "Returns the extension metadata for a given function."
          },
          "removeExtension(string)": {
            "notice": "Remove an existing extension from the router."
          },
          "replaceExtension(((string,string,address),(bytes4,string)[]))": {
            "notice": "Fully replace an existing extension of the router."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "sstore2/=lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/example/RouterRegistryConstrained.sol": "RouterRegistryConstrained"
      },
      "libraries": {}
    },
    "sources": {
      "lib/sstore2/contracts/SSTORE2.sol": {
        "keccak256": "0x79e6f5c7bb6b22d142ad0ec37e00930cdbef28ab405214f7c0f94cbd58255383",
        "urls": [
          "bzz-raw://fc67d6b9ff44cd2dc7ac3b1430a8a15c3eb1b00be941b8deac20eb42077917a8",
          "dweb:/ipfs/QmVwJ65VVakiNeS2VyRFKQueL1cibfwjmLeQpgLi9BWZ1K"
        ],
        "license": "MIT"
      },
      "lib/sstore2/contracts/utils/Bytecode.sol": {
        "keccak256": "0x40ef4ee5697507566574eda36358a76b523b3dfe7cb65da1630004fe6c5a7a45",
        "urls": [
          "bzz-raw://95059c34a2fe249bede85fb523ff53eddf61e45fe76436201237f2eae73bc14c",
          "dweb:/ipfs/QmT6qbZsBzUS6Mpc9yAmhourUFC8TNpaF6vzxysyAKEcpN"
        ],
        "license": "MIT"
      },
      "src/core/Router.sol": {
        "keccak256": "0x0b8e78a723ff6c6e966cc69ec9f61cec3667819a558b71069739b156098a0fd9",
        "urls": [
          "bzz-raw://dcb544b837505f52feb13fab8d0d3bf7544ed217d7c8f418d8a40f9b49c16b94",
          "dweb:/ipfs/Qma6uuc5kMcTxPW7LpNi1wXMtyVrnQ5iEZjiJ5RMFRGYrj"
        ],
        "license": "MIT"
      },
      "src/example/RouterRegistryConstrained.sol": {
        "keccak256": "0xb2ef0f72ceb52a04c5d73395fe1cf203aeec4d849b9e6a8e60398fae3c36efa7",
        "urls": [
          "bzz-raw://09e144c0b617edabe70af5d7353588f3b21590ae273d2bc486ab9028da5f8333",
          "dweb:/ipfs/QmcKtWxQ76VSBJMbRCbyEqo4GFBNSjiLc6Xg7yPTgpfRoK"
        ],
        "license": "MIT"
      },
      "src/interface/IExtension.sol": {
        "keccak256": "0x22181c67dd7ec821697d7dfabe778d9ae85dc784aabcbc85e2dd8cc97789939e",
        "urls": [
          "bzz-raw://0802dbefa09c672978b95115083da519484bce42c9a7d0ebe756606a7f08ac7b",
          "dweb:/ipfs/QmRsyrkkmR7dTyhY8cF3M389V5eip24Y5gN3X8ok4W8z8M"
        ],
        "license": "MIT"
      },
      "src/interface/IExtensionManager.sol": {
        "keccak256": "0xa728f4254f5feeb38d91f5d5b4d3d88d0d129b9cc66c2abd0a02a54fb790bd29",
        "urls": [
          "bzz-raw://78a28da28ae60859d5d9e88bab7bccdb46d0ae7bcc170b0741de8aae7024d2f5",
          "dweb:/ipfs/QmbUDiD3WQzm5x54HW1YqyEp5fLMt1UAdf8wHrcqDoKHiZ"
        ],
        "license": "MIT"
      },
      "src/interface/IRouter.sol": {
        "keccak256": "0xda007810e0416a45e3e6bbaa6c9977029e4e7cccb0c45e324b2dfbda900ee0bf",
        "urls": [
          "bzz-raw://d2c7a80cad255c4f6928391272209d724a9d044801bca1b873bbf998363e0c55",
          "dweb:/ipfs/Qme9cCYBPw28uLq3N688jAS6jAV8yVhhBCXNgxMQeHeDxJ"
        ],
        "license": "MIT"
      },
      "src/interface/IRouterState.sol": {
        "keccak256": "0x675677235369c260e7b867d14e33fda5806320803061ea90d1e0441be5cc3d04",
        "urls": [
          "bzz-raw://ad3a3a31d042d10d9a5860fdac76a78ac3538d2fc59ae96551b24f28490026e9",
          "dweb:/ipfs/QmTGSS1HR3yLUSQJfGF5tZYCzvpz1HweZWWm3NNVuv4x7M"
        ],
        "license": "MIT"
      },
      "src/interface/IRouterStateGetters.sol": {
        "keccak256": "0x4d1d6f562583d102a2cbc4c86500aea7e7c2c07e022ceb42c01f10b6144d28a1",
        "urls": [
          "bzz-raw://c5a3ebb605ba72213781ce143ea39517a2bcafe81516cfeeaa3c383f8cba8099",
          "dweb:/ipfs/QmSFTMTHVGVN6u6wn7iDFKjf8afpK3tPgMXEFyQRmo3R5o"
        ],
        "license": "MIT"
      },
      "src/lib/BaseRouterStorage.sol": {
        "keccak256": "0x08a812f419f3b33e7c9f5e15667f9e7a0586e9282353cbb09068689a003dbbc4",
        "urls": [
          "bzz-raw://b5709a425a0c07f833e416bf6c96184cabf3f414d275f0f76105bca38ace84fd",
          "dweb:/ipfs/QmahKaYfWwefaPcJZzmy1BLkCcqiNPg6dpMrFRhb2UoqRB"
        ],
        "license": "MIT"
      },
      "src/lib/ExtensionManagerStorage.sol": {
        "keccak256": "0x9680ed59ae74b26255d88691a48486baa539410deb045127ee7f40c9b23a8abb",
        "urls": [
          "bzz-raw://5a23b0f5b4e263b62bb8755fb033d2eca374022cf2cadc496516086106cf76b3",
          "dweb:/ipfs/QmRYNz6GcqnMkxYo62ZSmThNKNatgDFU1vMkT2aAP7iuCa"
        ],
        "license": "MIT"
      },
      "src/lib/StringSet.sol": {
        "keccak256": "0x3cfe09c207edb70d6aec054f80ba6559a01bb17f95796765b9a98cc59e7ffafc",
        "urls": [
          "bzz-raw://43383086cbc953cb6fbd18e677f13e72c83081c095611c0608d7a66f55071ff3",
          "dweb:/ipfs/QmfMxmNAhPZZgsopXDXJ5PviMpcahsvYoiN3GEkLnaXiDf"
        ],
        "license": "MIT"
      },
      "src/presets/BaseRouter.sol": {
        "keccak256": "0x95ea34cf3972fbcb981ad98aca3c31c18f62daa48dfd744574883f2030008fa9",
        "urls": [
          "bzz-raw://338a4f606afcc1b085def5ec58af412f985495592af7a1449b9e4c2e17cc36cb",
          "dweb:/ipfs/QmXpCuZDHE5WnSuoipDiDZVycwPE917ZsLB15zDxhtJdtC"
        ],
        "license": "MIT"
      },
      "src/presets/ExtensionManager.sol": {
        "keccak256": "0x87f5cf4c680c83d6da817bb00f9adc4aaf0f479ca06622459789a91b9668ee18",
        "urls": [
          "bzz-raw://25a785d81a053b0f1b0e6235487f7102c7ecd7d4eeaee4a75b2f7afa2261b7a7",
          "dweb:/ipfs/QmSD8RMbwE7T8ghFLrF5WPwsMgfxJHz7bTUwrknovLKc3w"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/example/RouterRegistryConstrained.sol",
    "id": 28828,
    "exportedSymbols": {
      "BaseRouter": [
        29901
      ],
      "BaseRouterStorage": [
        29103
      ],
      "Bytecode": [
        28578
      ],
      "ExtensionManager": [
        30860
      ],
      "ExtensionRegistry": [
        28714
      ],
      "IRouter": [
        29019
      ],
      "IRouterState": [
        29034
      ],
      "IRouterStateGetters": [
        29059
      ],
      "Router": [
        28627
      ],
      "RouterRegistryConstrained": [
        28827
      ],
      "SSTORE2": [
        28466
      ],
      "StringSet": [
        29453
      ]
    },
    "nodeType": "SourceUnit",
    "src": "106:2287:21",
    "nodes": [
      {
        "id": 28674,
        "nodeType": "PragmaDirective",
        "src": "106:23:21",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 28675,
        "nodeType": "ImportDirective",
        "src": "131:35:21",
        "nodes": [],
        "absolutePath": "src/presets/BaseRouter.sol",
        "file": "../presets/BaseRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28828,
        "sourceUnit": 29902,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28714,
        "nodeType": "ContractDefinition",
        "src": "255:417:21",
        "nodes": [
          {
            "id": 28678,
            "nodeType": "VariableDeclaration",
            "src": "289:30:21",
            "nodes": [],
            "constant": false,
            "functionSelector": "f851a440",
            "mutability": "immutable",
            "name": "admin",
            "nameLocation": "314:5:21",
            "scope": 28714,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28677,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "289:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28682,
            "nodeType": "VariableDeclaration",
            "src": "325:45:21",
            "nodes": [],
            "constant": false,
            "functionSelector": "c3c5a547",
            "mutability": "mutable",
            "name": "isRegistered",
            "nameLocation": "358:12:21",
            "scope": 28714,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 28681,
              "keyType": {
                "id": 28679,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "334:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "325:25:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 28680,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "345:4:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 28691,
            "nodeType": "FunctionDefinition",
            "src": "377:49:21",
            "nodes": [],
            "body": {
              "id": 28690,
              "nodeType": "Block",
              "src": "391:35:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 28688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28685,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28678,
                      "src": "401:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 28686,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "409:3:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 28687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "413:6:21",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "409:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "401:18:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 28689,
                  "nodeType": "ExpressionStatement",
                  "src": "401:18:21"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "388:2:21"
            },
            "returnParameters": {
              "id": 28684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "391:0:21"
            },
            "scope": 28714,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28713,
            "nodeType": "FunctionDefinition",
            "src": "432:238:21",
            "nodes": [],
            "body": {
              "id": 28712,
              "nodeType": "Block",
              "src": "513:157:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 28702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 28699,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "531:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 28700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "535:6:21",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "531:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 28701,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28678,
                          "src": "545:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "531:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457874656e73696f6e52656769737472793a204f6e6c792061646d696e2063616e20616c74657220657874656e73696f6e207265676973747279",
                        "id": 28703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "552:60:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7378d5a22326aa66e62538fee5fcfa198860b8336ce9fbb617b9266a41eb2fa2",
                          "typeString": "literal_string \"ExtensionRegistry: Only admin can alter extension registry\""
                        },
                        "value": "ExtensionRegistry: Only admin can alter extension registry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7378d5a22326aa66e62538fee5fcfa198860b8336ce9fbb617b9266a41eb2fa2",
                          "typeString": "literal_string \"ExtensionRegistry: Only admin can alter extension registry\""
                        }
                      ],
                      "id": 28698,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "523:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "523:90:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28705,
                  "nodeType": "ExpressionStatement",
                  "src": "523:90:21"
                },
                {
                  "expression": {
                    "id": 28710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 28706,
                        "name": "isRegistered",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28682,
                        "src": "623:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 28708,
                      "indexExpression": {
                        "id": 28707,
                        "name": "_extension",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28693,
                        "src": "636:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "623:24:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28709,
                      "name": "_isRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28695,
                      "src": "650:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "623:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28711,
                  "nodeType": "ExpressionStatement",
                  "src": "623:40:21"
                }
              ]
            },
            "functionSelector": "6beaa2e6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setExtensionRegistered",
            "nameLocation": "441:22:21",
            "parameters": {
              "id": 28696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28693,
                  "mutability": "mutable",
                  "name": "_extension",
                  "nameLocation": "472:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 28713,
                  "src": "464:18:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28695,
                  "mutability": "mutable",
                  "name": "_isRegistered",
                  "nameLocation": "489:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 28713,
                  "src": "484:18:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28694,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:40:21"
            },
            "returnParameters": {
              "id": 28697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "513:0:21"
            },
            "scope": 28714,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ExtensionRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 28676,
          "nodeType": "StructuredDocumentation",
          "src": "168:86:21",
          "text": "  This smart contract is an EXAMPLE, and is not meant for use in production."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28714
        ],
        "name": "ExtensionRegistry",
        "nameLocation": "264:17:21",
        "scope": 28828,
        "usedErrors": []
      },
      {
        "id": 28827,
        "nodeType": "ContractDefinition",
        "src": "761:1632:21",
        "nodes": [
          {
            "id": 28719,
            "nodeType": "VariableDeclaration",
            "src": "817:20:21",
            "nodes": [],
            "constant": false,
            "functionSelector": "f851a440",
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "832:5:21",
            "scope": 28827,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28718,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "817:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28722,
            "nodeType": "VariableDeclaration",
            "src": "843:33:21",
            "nodes": [],
            "constant": false,
            "functionSelector": "7b103999",
            "mutability": "mutable",
            "name": "registry",
            "nameLocation": "868:8:21",
            "scope": 28827,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ExtensionRegistry_$28714",
              "typeString": "contract ExtensionRegistry"
            },
            "typeName": {
              "id": 28721,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28720,
                "name": "ExtensionRegistry",
                "nameLocations": [
                  "843:17:21"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28714,
                "src": "843:17:21"
              },
              "referencedDeclaration": 28714,
              "src": "843:17:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExtensionRegistry_$28714",
                "typeString": "contract ExtensionRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28748,
            "nodeType": "FunctionDefinition",
            "src": "998:146:21",
            "nodes": [],
            "body": {
              "id": 28747,
              "nodeType": "Block",
              "src": "1060:84:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 28739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28736,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28719,
                      "src": "1070:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 28737,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1078:3:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 28738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1082:6:21",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1078:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1070:18:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 28740,
                  "nodeType": "ExpressionStatement",
                  "src": "1070:18:21"
                },
                {
                  "expression": {
                    "id": 28745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28741,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28722,
                      "src": "1098:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExtensionRegistry_$28714",
                        "typeString": "contract ExtensionRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 28743,
                          "name": "_registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28725,
                          "src": "1127:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 28742,
                        "name": "ExtensionRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28714,
                        "src": "1109:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ExtensionRegistry_$28714_$",
                          "typeString": "type(contract ExtensionRegistry)"
                        }
                      },
                      "id": 28744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1109:28:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExtensionRegistry_$28714",
                        "typeString": "contract ExtensionRegistry"
                      }
                    },
                    "src": "1098:39:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExtensionRegistry_$28714",
                      "typeString": "contract ExtensionRegistry"
                    }
                  },
                  "id": 28746,
                  "nodeType": "ExpressionStatement",
                  "src": "1098:39:21"
                }
              ]
            },
            "documentation": {
              "id": 28723,
              "nodeType": "StructuredDocumentation",
              "src": "883:110:21",
              "text": "@dev Cannot initialize with extensions before registry is set, so we pass empty array to base constructor."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 28732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1056:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 28731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1040:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Extension_$28907_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct IExtension.Extension memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 28729,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 28728,
                            "name": "Extension",
                            "nameLocations": [
                              "1044:9:21"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28907,
                            "src": "1044:9:21"
                          },
                          "referencedDeclaration": 28907,
                          "src": "1044:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Extension_$28907_storage_ptr",
                            "typeString": "struct IExtension.Extension"
                          }
                        },
                        "id": 28730,
                        "nodeType": "ArrayTypeName",
                        "src": "1044:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Extension_$28907_storage_$dyn_storage_ptr",
                          "typeString": "struct IExtension.Extension[]"
                        }
                      }
                    },
                    "id": 28733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1040:18:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Extension_$28907_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IExtension.Extension memory[] memory"
                    }
                  }
                ],
                "id": 28734,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 28727,
                  "name": "BaseRouter",
                  "nameLocations": [
                    "1029:10:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29901,
                  "src": "1029:10:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1029:30:21"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28725,
                  "mutability": "mutable",
                  "name": "_registry",
                  "nameLocation": "1018:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 28748,
                  "src": "1010:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1009:19:21"
            },
            "returnParameters": {
              "id": 28735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1060:0:21"
            },
            "scope": 28827,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28767,
            "nodeType": "FunctionDefinition",
            "src": "1187:165:21",
            "nodes": [],
            "body": {
              "id": 28766,
              "nodeType": "Block",
              "src": "1230:122:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 28758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 28755,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1248:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 28756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1252:6:21",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1248:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 28757,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28719,
                          "src": "1262:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1248:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465725570677261646561626c653a204f6e6c792061646d696e2063616e207365742061206e65772061646d696e",
                        "id": 28759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1269:51:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19927d84e9664ddd78b6e2852919a750a30aad5314fd2dd69bd9d1bd3bc1a6db",
                          "typeString": "literal_string \"RouterUpgradeable: Only admin can set a new admin\""
                        },
                        "value": "RouterUpgradeable: Only admin can set a new admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19927d84e9664ddd78b6e2852919a750a30aad5314fd2dd69bd9d1bd3bc1a6db",
                          "typeString": "literal_string \"RouterUpgradeable: Only admin can set a new admin\""
                        }
                      ],
                      "id": 28754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1240:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1240:81:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28761,
                  "nodeType": "ExpressionStatement",
                  "src": "1240:81:21"
                },
                {
                  "expression": {
                    "id": 28764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28762,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28719,
                      "src": "1331:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28763,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28751,
                      "src": "1339:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1331:14:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 28765,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:14:21"
                }
              ]
            },
            "documentation": {
              "id": 28749,
              "nodeType": "StructuredDocumentation",
              "src": "1150:32:21",
              "text": "@dev Sets the admin address."
            },
            "functionSelector": "704b6c02",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAdmin",
            "nameLocation": "1196:8:21",
            "parameters": {
              "id": 28752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28751,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "1213:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 28767,
                  "src": "1205:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1204:16:21"
            },
            "returnParameters": {
              "id": 28753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1230:0:21"
            },
            "scope": 28827,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28780,
            "nodeType": "FunctionDefinition",
            "src": "1634:127:21",
            "nodes": [],
            "body": {
              "id": 28779,
              "nodeType": "Block",
              "src": "1718:43:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 28777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28774,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1735:3:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 28775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1739:6:21",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1735:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 28776,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28719,
                      "src": "1749:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1735:19:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 28773,
                  "id": 28778,
                  "nodeType": "Return",
                  "src": "1728:26:21"
                }
              ]
            },
            "baseFunctions": [
              30859
            ],
            "documentation": {
              "id": 28768,
              "nodeType": "StructuredDocumentation",
              "src": "1536:93:21",
              "text": "@dev Returns whether all relevant permission and other checks are met before any upgrade."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isAuthorizedCallToUpgrade",
            "nameLocation": "1643:26:21",
            "overrides": {
              "id": 28770,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1694:8:21"
            },
            "parameters": {
              "id": 28769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1669:2:21"
            },
            "returnParameters": {
              "id": 28773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28772,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28780,
                  "src": "1712:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28771,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1712:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1711:6:21"
            },
            "scope": 28827,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 28803,
            "nodeType": "FunctionDefinition",
            "src": "1857:215:21",
            "nodes": [],
            "body": {
              "id": 28802,
              "nodeType": "Block",
              "src": "1953:119:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 28800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 28792,
                          "name": "_extension",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28784,
                          "src": "1993:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Extension_$28907_memory_ptr",
                            "typeString": "struct IExtension.Extension memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Extension_$28907_memory_ptr",
                            "typeString": "struct IExtension.Extension memory"
                          }
                        ],
                        "expression": {
                          "id": 28790,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1970:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_RouterRegistryConstrained_$28827_$",
                            "typeString": "type(contract super RouterRegistryConstrained)"
                          }
                        },
                        "id": 28791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1976:16:21",
                        "memberName": "_canAddExtension",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30713,
                        "src": "1970:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Extension_$28907_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct IExtension.Extension memory) returns (bool)"
                        }
                      },
                      "id": 28793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1970:34:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 28796,
                              "name": "_extension",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28784,
                              "src": "2030:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Extension_$28907_memory_ptr",
                                "typeString": "struct IExtension.Extension memory"
                              }
                            },
                            "id": 28797,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2041:8:21",
                            "memberName": "metadata",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28902,
                            "src": "2030:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExtensionMetadata_$28894_memory_ptr",
                              "typeString": "struct IExtension.ExtensionMetadata memory"
                            }
                          },
                          "id": 28798,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2050:14:21",
                          "memberName": "implementation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28893,
                          "src": "2030:34:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 28794,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28722,
                          "src": "2008:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExtensionRegistry_$28714",
                            "typeString": "contract ExtensionRegistry"
                          }
                        },
                        "id": 28795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2017:12:21",
                        "memberName": "isRegistered",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28682,
                        "src": "2008:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 28799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2008:57:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1970:95:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 28789,
                  "id": 28801,
                  "nodeType": "Return",
                  "src": "1963:102:21"
                }
              ]
            },
            "baseFunctions": [
              30713
            ],
            "documentation": {
              "id": 28781,
              "nodeType": "StructuredDocumentation",
              "src": "1767:85:21",
              "text": "@dev Returns whether a new extension can be added in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canAddExtension",
            "nameLocation": "1866:16:21",
            "overrides": {
              "id": 28786,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1929:8:21"
            },
            "parameters": {
              "id": 28785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28784,
                  "mutability": "mutable",
                  "name": "_extension",
                  "nameLocation": "1900:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 28803,
                  "src": "1883:27:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Extension_$28907_memory_ptr",
                    "typeString": "struct IExtension.Extension"
                  },
                  "typeName": {
                    "id": 28783,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28782,
                      "name": "Extension",
                      "nameLocations": [
                        "1883:9:21"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28907,
                      "src": "1883:9:21"
                    },
                    "referencedDeclaration": 28907,
                    "src": "1883:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Extension_$28907_storage_ptr",
                      "typeString": "struct IExtension.Extension"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1882:29:21"
            },
            "returnParameters": {
              "id": 28789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28788,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28803,
                  "src": "1947:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28787,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1947:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1946:6:21"
            },
            "scope": 28827,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 28826,
            "nodeType": "FunctionDefinition",
            "src": "2168:223:21",
            "nodes": [],
            "body": {
              "id": 28825,
              "nodeType": "Block",
              "src": "2268:123:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 28823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 28815,
                          "name": "_extension",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28807,
                          "src": "2312:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Extension_$28907_memory_ptr",
                            "typeString": "struct IExtension.Extension memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Extension_$28907_memory_ptr",
                            "typeString": "struct IExtension.Extension memory"
                          }
                        ],
                        "expression": {
                          "id": 28813,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "2285:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_RouterRegistryConstrained_$28827_$",
                            "typeString": "type(contract super RouterRegistryConstrained)"
                          }
                        },
                        "id": 28814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2291:20:21",
                        "memberName": "_canReplaceExtension",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30749,
                        "src": "2285:26:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Extension_$28907_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct IExtension.Extension memory) returns (bool)"
                        }
                      },
                      "id": 28816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2285:38:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 28819,
                              "name": "_extension",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28807,
                              "src": "2349:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Extension_$28907_memory_ptr",
                                "typeString": "struct IExtension.Extension memory"
                              }
                            },
                            "id": 28820,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2360:8:21",
                            "memberName": "metadata",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28902,
                            "src": "2349:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExtensionMetadata_$28894_memory_ptr",
                              "typeString": "struct IExtension.ExtensionMetadata memory"
                            }
                          },
                          "id": 28821,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2369:14:21",
                          "memberName": "implementation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28893,
                          "src": "2349:34:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 28817,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28722,
                          "src": "2327:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExtensionRegistry_$28714",
                            "typeString": "contract ExtensionRegistry"
                          }
                        },
                        "id": 28818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2336:12:21",
                        "memberName": "isRegistered",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28682,
                        "src": "2327:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 28822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2327:57:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2285:99:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 28812,
                  "id": 28824,
                  "nodeType": "Return",
                  "src": "2278:106:21"
                }
              ]
            },
            "baseFunctions": [
              30749
            ],
            "documentation": {
              "id": 28804,
              "nodeType": "StructuredDocumentation",
              "src": "2078:85:21",
              "text": "@dev Returns whether an extension can be replaced in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canReplaceExtension",
            "nameLocation": "2177:20:21",
            "overrides": {
              "id": 28809,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2244:8:21"
            },
            "parameters": {
              "id": 28808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28807,
                  "mutability": "mutable",
                  "name": "_extension",
                  "nameLocation": "2215:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 28826,
                  "src": "2198:27:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Extension_$28907_memory_ptr",
                    "typeString": "struct IExtension.Extension"
                  },
                  "typeName": {
                    "id": 28806,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28805,
                      "name": "Extension",
                      "nameLocations": [
                        "2198:9:21"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28907,
                      "src": "2198:9:21"
                    },
                    "referencedDeclaration": 28907,
                    "src": "2198:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Extension_$28907_storage_ptr",
                      "typeString": "struct IExtension.Extension"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2197:29:21"
            },
            "returnParameters": {
              "id": 28812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28811,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28826,
                  "src": "2262:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28810,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2262:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2261:6:21"
            },
            "scope": 28827,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28716,
              "name": "BaseRouter",
              "nameLocations": [
                "799:10:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29901,
              "src": "799:10:21"
            },
            "id": 28717,
            "nodeType": "InheritanceSpecifier",
            "src": "799:10:21"
          }
        ],
        "canonicalName": "RouterRegistryConstrained",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 28715,
          "nodeType": "StructuredDocumentation",
          "src": "674:86:21",
          "text": "  This smart contract is an EXAMPLE, and is not meant for use in production."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28827,
          29901,
          30860,
          29059,
          29034,
          29003,
          28908,
          28627,
          29019
        ],
        "name": "RouterRegistryConstrained",
        "nameLocation": "770:25:21",
        "scope": 28828,
        "usedErrors": [
          28366
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 21
}