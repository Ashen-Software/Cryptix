{"abi":[{"type":"function","name":"getPlatformFeeInfo","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint16","internalType":"uint16"}],"stateMutability":"view"},{"type":"function","name":"setPlatformFeeInfo","inputs":[{"name":"_platformFeeRecipient","type":"address","internalType":"address"},{"name":"_platformFeeBps","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"PlatformFeeInfoUpdated","inputs":[{"name":"platformFeeRecipient","type":"address","indexed":true,"internalType":"address"},{"name":"platformFeeBps","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"PlatformFeeExceededMaxFeeBps","inputs":[{"name":"max","type":"uint256","internalType":"uint256"},{"name":"actual","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"PlatformFeeInvalidRecipient","inputs":[{"name":"recipient","type":"address","internalType":"address"}]},{"type":"error","name":"PlatformFeeUnauthorized","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getPlatformFeeInfo()":"d45573f6","setPlatformFeeInfo(address,uint256)":"1e7ac488"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeExceededMaxFeeBps\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PlatformFeeInvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PlatformFeeUnauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"PlatformFeeExceededMaxFeeBps(uint256,uint256)\":[{\"details\":\"The fee bps exceeded the max value\"}],\"PlatformFeeInvalidRecipient(address)\":[{\"details\":\"The recipient is invalid\"}],\"PlatformFeeUnauthorized()\":[{\"details\":\"The sender is not authorized to perform the action\"}]},\"events\":{\"PlatformFeeInfoUpdated(address,uint256)\":{\"details\":\"Emitted when fee on primary sales is updated.\"}},\"kind\":\"dev\",\"methods\":{\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}}},\"stateVariables\":{\"platformFeeBps\":{\"details\":\"The % of primary sales collected as platform fees.\"},\"platformFeeRecipient\":{\"details\":\"The address that receives all platform fees from all sales.\"}},\"title\":\"Platform Fee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"}},\"notice\":\"Thirdweb's `PlatformFee` is a contract extension to be used with any base contract. It exposes functions for setting and reading           the recipient of platform fee and the platform fee basis points, and lets the inheriting contract perform conditional logic           that uses information about platform fees, if desired.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/legacy-contracts/extension/PlatformFee_V1.sol\":\"PlatformFee\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/seaport/lib/solmate/\",\":@seaport/=lib/seaport/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":murky/=lib/murky/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":seaport-core/=lib/seaport/lib/seaport-core/\",\":seaport-sol/=lib/seaport-sol/src/\",\":seaport-types/=lib/seaport/lib/seaport-types/\",\":seaport/=lib/seaport/\",\":solady/=lib/solady/\",\":solarray/=lib/seaport/lib/solarray/src/\",\":solmate/=lib/seaport/lib/solmate/src/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/legacy-contracts/extension/PlatformFee_V1.sol\":{\"keccak256\":\"0x603f143e92555423849bdd8046d79ef7d167e4b2346007b5dc1d2620f3fe5246\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f0eaeb3aed398cae23f2eaa1b7abe36a4d94b708d59da3e58d448c8f3e20fba9\",\"dweb:/ipfs/QmPgXH1LjAoYcQAjuJQkuJwS32V8VngWppFvBENtD9Sk7g\"]},\"contracts/legacy-contracts/extension/interface/IPlatformFee_V1.sol\":{\"keccak256\":\"0x821a81bf354f9ab048420d056ef0cbcb5a7bbffa49ce443f32bb9248532052d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://11ef266df18f4308b985d51ac884c009c40b550f918499780233c06193f3abc5\",\"dweb:/ipfs/QmdpFFZNQh6ihqXX8Q7cQ496JJMji9K7FtvPjCoRojyHTC\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"max","type":"uint256"},{"internalType":"uint256","name":"actual","type":"uint256"}],"type":"error","name":"PlatformFeeExceededMaxFeeBps"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"type":"error","name":"PlatformFeeInvalidRecipient"},{"inputs":[],"type":"error","name":"PlatformFeeUnauthorized"},{"inputs":[{"internalType":"address","name":"platformFeeRecipient","type":"address","indexed":true},{"internalType":"uint256","name":"platformFeeBps","type":"uint256","indexed":false}],"type":"event","name":"PlatformFeeInfoUpdated","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"getPlatformFeeInfo","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint16","name":"","type":"uint16"}]},{"inputs":[{"internalType":"address","name":"_platformFeeRecipient","type":"address"},{"internalType":"uint256","name":"_platformFeeBps","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setPlatformFeeInfo"}],"devdoc":{"kind":"dev","methods":{"getPlatformFeeInfo()":{"details":"Returns the platform fee recipient and bps."},"setPlatformFeeInfo(address,uint256)":{"details":"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.","params":{"_platformFeeBps":"Updated platformFeeBps.","_platformFeeRecipient":"Address to be set as new platformFeeRecipient."}}},"version":1},"userdoc":{"kind":"user","methods":{"setPlatformFeeInfo(address,uint256)":{"notice":"Updates the platform fee recipient and bps."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/seaport/lib/solmate/","@seaport/=lib/seaport/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","murky/=lib/murky/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","seaport-core/=lib/seaport/lib/seaport-core/","seaport-sol/=lib/seaport-sol/src/","seaport-types/=lib/seaport/lib/seaport-types/","seaport/=lib/seaport/","solady/=lib/solady/","solarray/=lib/seaport/lib/solarray/src/","solmate/=lib/seaport/lib/solmate/src/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/legacy-contracts/extension/PlatformFee_V1.sol":"PlatformFee"},"evmVersion":"london","libraries":{}},"sources":{"contracts/legacy-contracts/extension/PlatformFee_V1.sol":{"keccak256":"0x603f143e92555423849bdd8046d79ef7d167e4b2346007b5dc1d2620f3fe5246","urls":["bzz-raw://f0eaeb3aed398cae23f2eaa1b7abe36a4d94b708d59da3e58d448c8f3e20fba9","dweb:/ipfs/QmPgXH1LjAoYcQAjuJQkuJwS32V8VngWppFvBENtD9Sk7g"],"license":"Apache-2.0"},"contracts/legacy-contracts/extension/interface/IPlatformFee_V1.sol":{"keccak256":"0x821a81bf354f9ab048420d056ef0cbcb5a7bbffa49ce443f32bb9248532052d9","urls":["bzz-raw://11ef266df18f4308b985d51ac884c009c40b550f918499780233c06193f3abc5","dweb:/ipfs/QmdpFFZNQh6ihqXX8Q7cQ496JJMji9K7FtvPjCoRojyHTC"],"license":"Apache-2.0"}},"version":1},"id":276}