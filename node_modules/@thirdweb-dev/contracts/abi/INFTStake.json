{"abi":[{"type":"function","name":"depositRewardTokens","inputs":[{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"withdrawRewardTokens","inputs":[{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"RewardTokensDepositedByAdmin","inputs":[{"name":"_amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardTokensWithdrawnByAdmin","inputs":[{"name":"_amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"depositRewardTokens(uint256)":"16c621e0","withdrawRewardTokens(uint256)":"cb43b2dd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RewardTokensDepositedByAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RewardTokensWithdrawnByAdmin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositRewardTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RewardTokensDepositedByAdmin(uint256)\":{\"details\":\"Emitted when contract admin deposits reward tokens.\"},\"RewardTokensWithdrawnByAdmin(uint256)\":{\"details\":\"Emitted when contract admin withdraws reward tokens.\"}},\"kind\":\"dev\",\"methods\":{\"depositRewardTokens(uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to deposit.\"}},\"withdrawRewardTokens(uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to deposit.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositRewardTokens(uint256)\":{\"notice\":\"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) deposit reward-tokens.          note: Tokens should be approved on the reward-token contract before depositing.\"},\"withdrawRewardTokens(uint256)\":{\"notice\":\"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) withdraw reward-tokens.          Useful for removing excess balance, thus preventing locking of tokens.\"}},\"notice\":\"Thirdweb's NFTStake smart contract allows users to stake their ERC-721 NFTs  and earn rewards in form of an ERC-20 token.  note:  - Reward token and staking token can't be changed after deployment.  - ERC721 tokens from only the specified contract can be staked.  - All token/NFT transfers require approval on their respective contracts.  - Admin must deposit reward tokens using the `depositRewardTokens` function only.    Any direct transfers may cause unintended consequences, such as locking of tokens.  - Users must stake NFTs using the `stake` function only.    Any direct transfers may cause unintended consequences, such as locking of NFTs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/interface/staking/INFTStake.sol\":\"INFTStake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/seaport/lib/solmate/\",\":@seaport/=lib/seaport/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":murky/=lib/murky/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":seaport-core/=lib/seaport/lib/seaport-core/\",\":seaport-sol/=lib/seaport-sol/src/\",\":seaport-types/=lib/seaport/lib/seaport-types/\",\":seaport/=lib/seaport/\",\":solady/=lib/solady/\",\":solarray/=lib/seaport/lib/solarray/src/\",\":solmate/=lib/seaport/lib/solmate/src/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/prebuilts/interface/staking/INFTStake.sol\":{\"keccak256\":\"0xa50c121c0d322526fe8432c9b69d0ae51d8e8467a3314e1af69da2de0f398559\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1fe3a11b07b0c7e3146fc191f2d60bc3e0397c87ab8d23f7a745bd51a48efb18\",\"dweb:/ipfs/QmThdDoyvZ4CEkDnxgZ5DS2tjHwrhdbpwrkNaw79auvqL2\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256","indexed":false}],"type":"event","name":"RewardTokensDepositedByAdmin","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256","indexed":false}],"type":"event","name":"RewardTokensWithdrawnByAdmin","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"depositRewardTokens"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawRewardTokens"}],"devdoc":{"kind":"dev","methods":{"depositRewardTokens(uint256)":{"params":{"_amount":"Amount of tokens to deposit."}},"withdrawRewardTokens(uint256)":{"params":{"_amount":"Amount of tokens to deposit."}}},"version":1},"userdoc":{"kind":"user","methods":{"depositRewardTokens(uint256)":{"notice":"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) deposit reward-tokens.          note: Tokens should be approved on the reward-token contract before depositing."},"withdrawRewardTokens(uint256)":{"notice":"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) withdraw reward-tokens.          Useful for removing excess balance, thus preventing locking of tokens."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/seaport/lib/solmate/","@seaport/=lib/seaport/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","murky/=lib/murky/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","seaport-core/=lib/seaport/lib/seaport-core/","seaport-sol/=lib/seaport-sol/src/","seaport-types/=lib/seaport/lib/seaport-types/","seaport/=lib/seaport/","solady/=lib/solady/","solarray/=lib/seaport/lib/solarray/src/","solmate/=lib/seaport/lib/solmate/src/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/prebuilts/interface/staking/INFTStake.sol":"INFTStake"},"evmVersion":"london","libraries":{}},"sources":{"contracts/prebuilts/interface/staking/INFTStake.sol":{"keccak256":"0xa50c121c0d322526fe8432c9b69d0ae51d8e8467a3314e1af69da2de0f398559","urls":["bzz-raw://1fe3a11b07b0c7e3146fc191f2d60bc3e0397c87ab8d23f7a745bd51a48efb18","dweb:/ipfs/QmThdDoyvZ4CEkDnxgZ5DS2tjHwrhdbpwrkNaw79auvqL2"],"license":"Apache-2.0"}},"version":1},"id":360}